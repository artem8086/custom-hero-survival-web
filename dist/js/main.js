"use strict";!function(){var t,e,i,s,r,n,a,h,o,l,u,c,d,f,p,m,v,g,w,y,x,P,k;t=function(){class t{static load(e,i){var s;return(s=t.cache[i])||((s=new t).load(e,i),t.cache[i]=s),s}load(t,e){return t.loadJson(e,t=>{this.data=t}),t.loadImage(e+".png",t=>{this.texture=t})}draw(t,e,i,s,r=0){var n;if(n=this.data)switch(e.constructor){case Object:t.drawImage(this.texture,e.x,e.y,e.w,e.h,i+e.cx,s+e.cy,e.w,e.h);break;case Array:this.draw(t,e[Math.floor(r)%e.lenght],i,s);break;case String:this.draw(t,n[e],i,s,r)}return this}}return t.cache=[],t}.call(void 0),function(){class t{static load(e,i){var s;return(s=t.cache[i])||((s=new t).load(e,i),t.cache[i]=s),s}load(t,e){return t.loadJson(e,t=>{var e,i,s;if(t){for(e in i=[],t)s=t[e],i.push(this[e]=s);return i}})}}return t.cache=[],t}.call(void 0),i=function(){return(new Date).getTime()/1e3},r=function(t){return function(e){return 1-t(1-e)}},s=function(t){return function(e){return e<.5?t(2*e)/2:(2-t(2*(1-e)))/2}},n=function(t,e){return a[t]=e,a[t+"EaseOut"]=r(e),a[t+"EaseInOut"]=s(e)},a={linear:function(t){return t},easeOut:function(t){return 1-t},easeInOut:function(t){return t<.5?2*t:2-2*t}},n("quad",(function(t){return t*t})),n("circle",(function(t){return 1-Math.sin(Math.acos(t))})),n("bounce",(function(t){var e,i;for(e=0,i=1;;){if(t>=(7-4*e)/11)return-Math.pow((11-6*e-11*t)/4,2)+Math.pow(i,2);e+=i,i/=2}})),e=function(){class t{reset(){return this.startTime=i(),this.deltaTime=0,this}setAnim(t,e=0,i=this.data){return this.anim=null!=i?i[t]:void 0,this.reset(),this.anim&&(this.duration=this.anim?this.anim.duration:0,this.setAngle(e)),this}setAngle(t){var e,i,s;return this.frame=null,this.anim&&(t%=360,(i=this.anim.dirs)&&((s=i.lenght)>1?(e=360/s,t<0&&(t+=360),this.frame=i[Math.floor(t/e)]):this.frame=i[0])),this}play(t){var e,s;if(t=t||i(),this.deltaTime=e=(t-this.startTime)*this.scale,!(s=this.duration))return!1;if(e>s){if(!this.loop)return!1;this.deltaTime%=s}return!0}animate(e,i=e.nodePath,s=e.nodeName){var r,n,h,o,l,u,c,d,f,p,m,v,g,w,y;if((n=this.frame)&&(w=n[i]||n[s]))for(r=this.deltaTime,d=t.props,f=t.propsUsed,h=0,o=w.length;h<o;h++)if(r>=(u=w[h]).end)for(l in p=u.to)y=p[l],f[l]||(d[l]=e[l],f[l]=!0),e[l]=y;else if(r>=u.start)for(l in v=u.func?a[u.func]:a.linear,m=u.to)y=m[l],c=e[l],f[l]||(d[l]=c,f[l]=!0),c||(c=0),y.constructor===Number?(g=v((r-u.start)/(u.end-u.start)),e[l]=(y-c)*g+c):e[l]=y;return this}reciveProps(e){var i,s,r;for(i in s=t.props,r=t.propsUsed)r[i]&&(e[i]=s[i],delete r[i]);return this}createWorkFrame(){return this.loop=!1,this.frame={work:[{start:0,end:0,to:{}}]},this}resetWork(){var e,i;for(e in i=t.propsUsed)i[e]&&(i[e]=!1);return this}clearWork(){var t,e,i;return(t=this.frame.work[0]).start=t.end=0,i=function(){var t;for(e in t=[],i)i[e],t.push(delete i[e]);return t}(),this}animateProps(t,e,i){var s,r,n,a;for(r in this.duration=e,(s=this.frame.work[0]).end=e,s.func=i,a=s.to,t)n=t[r],a[r]=n;return this.reset(),this}}return t.getTime=i,t.prototype.loop=!0,t.prototype.startTime=0,t.prototype.duration=0,t.prototype.deltaTime=0,t.prototype.scale=1,t.props=[],t.propsUsed=[],t}.call(void 0),o=function(){class e{static load(t,i){var s;return(s=e.cache[i])||((s=new e).load(t,i),e.cache[i]=s),s}load(i,s){return i.loadJson(s,s=>{var r,n,a,h,o,l,u,c,d,f,p,m,v,g;if(s){for(h in s)g=s[h],this[h]=g;if(this.images)for(h in n=this.images,this.images=[],n)r=n[h],this.images[h]=i.loadImage(r);if(this.sprites)for(h in v=this.sprites,this.sprites=[],v)m=v[h],this.sprites[h]=t.load(i,m);if(this.models)for(h in u=this.models,this.models=[],u)l=u[h],this.models[h]=e.load(i,l);if(d=function(t,e=""){var i,s,r;for(i in r=[],t)(s=t[i]).nodePath=e+i,s.nodeName="@"+i,s.before&&d(s.before,s.nodePath+"<"),s.after?r.push(d(s.after,s.nodePath+">")):r.push(void 0);return r},this.dirs){for(p=[],a=0,o=(f=this.dirs).length;a<o;a++)c=f[a],p.push(d(c));return p}}})}}return e.cache=[],e}.call(void 0),p={line:function(t){return t.moveTo(this.x1||0,this.y1||0),t.lineTo(this.x2||0,this.y2||0),this},rect:function(t){return t.rect(this.x||0,this.y||0,this.width||1,this.height||1),this},rectRound:function(t){var e,i,s,r,n;return this.noClose=!1,r=this.x||0,n=this.y||0,s=this.width,e=this.height,s<2*(i=this.radius)&&(i=s/2),e<2*i&&(i=e/2),t.moveTo(r+i,n),t.arcTo(r+s,n,r+s,n+e,i),t.arcTo(r+s,n+e,r,n+e,i),t.arcTo(r,n+e,r,n,i),t.arcTo(r,n,r+s,n,i),this},arc:function(t){return t.arc(this.x||0,this.y||0,this.radius,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise),this},elipse:function(t){return t.ellipse(this.x||0,this.y||0,this.rx,this.ry,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise),this},path:function(t){var e,i,s;return i=this.x||0,s=this.y||0,"string"==typeof this.path&&(this.path=new Path2D(this.path)),this.noClose=!0,t.translate(i,s),"f"!==(e=this.draw||"f&s")&&"f&s"!==e||t.fill(this.path),"s"!==e&&"f&s"!==e||t.stroke(this.path),this},node:function(t,e,i,s){var r,n,a,h,o,l,u,d,f;if(this.noClose=this.draw=!0,d=e.data,f=e.model,(a=s||(null!=(l=d.models)?l[this.model]:void 0))?(e.data=a,e.model=o=a.dirs[this.direction||0]):o="number"==typeof this.direction?e.data.dirs[this.direction]:e.model,o){if("string"==typeof(h=this.node))h=o[h];else{for(u=o,r=0,n=h.length;r<n;r++)u=u[h[r]];h=u}h&&(t.translate(this.x||0,this.y||0),c.call(h,t,e,i))}return e.model=f,e.data=d,this},attach:function(t,e,i){var s;return(s=e.attachment[this.attach])&&p.node.call(this,t,e,i,s),this},image:function(t,e){var i;return this.noClose=this.draw=!0,i=e.data.images[this.image],this.width||this.height?t.drawImage(i,this.x||0,this.y||0,this.width,this.height):t.drawImage(i,this.x||0,this.y||0),this},sprite:function(t,e){var i;return this.noClose=this.draw=!0,(i=this.sprite).constructor===String&&(this.sprite=i=e.data.sprites[i]),i.draw(t,this.frame,this.x||0,this.y||0,this.index),this},text:function(t){var e;return!0!==this.draw&&(this.drawText=this.draw),e=this.drawText,this.noClose=this.draw=!0,this.font&&(t.font=this.font),this.textAlign&&(t.textAlign=this.textAlign),null!==this.textBaseline&&(t.textBaseline=this.textBaseline),this.direction&&(t.direction=this.direction),"f"!==e&&"f&s"!==e||t.fillText(this.text,this.x||0,this.y||0,this.maxWidth),"s"!==e&&"f&s"!==e||t.strokeText(this.text,this.x||0,this.y||0,this.maxWidth),this}},g={linear:function(t){var e,i,s,r,n;for(i=t.createLinearGradient(this.x0||0,this.y0||0,this.x1||0,this.y1||0),s=0,r=(n=this.colorStops).length;s<r;s++)e=n[s],i.addColorStop(e.pos||0,e.color);return i},radial:function(t){var e,i,s,r,n;for(i=t.createRadialGradient(this.x0||0,this.y0||0,this.r0||0,this.x1||0,this.y1||0,this.r1||0),s=0,r=(n=this.colorStops).length;s<r;s++)e=n[s],i.addColorStop(e.pos||0,e.color);return i},pattern:function(t,e){var i;return i=e.data.images[this.image],t.createPattern(i,this.repetition||"repeat")}},m=function(t,e,i){var s;return null!=(s=g[i.type])?s.call(i,t,e):void 0},v=function(t,e){var i,s;return(s=this.stroke)&&(s.constructor===Object&&(this.stroke=m(t,e,s)),t.strokeStyle=this.stroke),(i=this.fill)&&(i.constructor===Object&&(this.fill=m(t,e,i)),t.fillStyle=this.fill),null!==this.lineWidth&&(t.lineWidth=this.lineWidth),null!==this.lineCap&&(t.lineCap=this.lineCap),this.lineJoin&&(t.lineJoin=this.lineJoin),null!==this.lineDashOffset&&(t.lineDashOffset=this.lineDashOffset),this},c=function(t,e,i){var s,r,n,a,h,o,l;if(t.save(),e.animation.animate(this),t.transform(this.scaleX||1,this.skewY||0,this.skewX||0,this.scaleY||1,this.origX||0,this.origY||0),(n=this.modelAngleScale)&&t.rotate(e.angle*n*Math.PI/180),this.angle&&t.rotate(this.angle*Math.PI/180),v.call(this,t,e),this.noShadow&&(t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0),null!==this.shadowBlur&&(t.shadowBlur=this.shadowBlur),null!==this.shadowColor&&(t.shadowColor=this.shadowColor),null!==this.shadowOffsetX&&(t.shadowOffsetX=this.shadowOffsetX),null!==this.shadowOffsetY&&(t.shadowOffsetY=this.shadowOffsetY),t.globalAlpha=i*(null===this.opacity?1:this.opacity),this.before){for(r in e.animation.reciveProps(this),h=this.before)(a=h[r]).hide||c.call(a,t,e,i);e.animation.animate(this)}if(t.beginPath(),null!=(o=p[this.type])&&o.call(this,t,e,i),this.noClose||t.closePath(),"f"!==(s=this.draw||"f&s")&&"f&s"!==s||t.fill(),"s"!==s&&"f&s"!==s||t.stroke(),this.clip&&t.clip(),e.animation.reciveProps(this),this.after)for(r in l=this.after)(a=l[r]).hide||c.call(a,t,e,i);return t.restore(),this},f={poly:function(t,e,i,s){var r,n,a,h,o,c,d,f,p,m;for(h=e[this.verts[0]],c=i.x,f=i.y,m=l+i.z,p=((h.z||0)+m)*u,o=((h.x||0)+c)*p,d=((h.y||0)+f)*p,t.moveTo(o,d),r=n=1,a=this.verts.length-1;1<=a?n<=a:n>=a;r=1<=a?++n:--n)p=(((h=e[this.verts[r]]).z||0)+m)*u,o=((h.x||0)+c)*p,d=((h.y||0)+f)*p,t.lineTo(o,d);return this},part:function(t,e,i,s,r){var n,a,h,o,l,u,c,f,p,m,v,g;if(this.noClose=this.draw=!0,(l=null!=(f=(m=s.data).models)?f[this.model]:void 0)?(s.data=l,c=l.dirsParts[this.direction||0]):c=s.parts,c&&(g=e[this.vert],n={x:i.x+(g.x||0),y:i.y+(g.y||0),z:i.z+(g.z||0)},u=c[this.part])){for(v=s.parts,s.parts=c,h=0,o=(p=u.faces).length;h<o;h++)a=p[h],d.call(a,t,s,n,r);s.parts=v}return s.data=m,this},node:function(t,e,i,s,r){return y(e[this.vert],i).apply(t),p.node.call(this,t,s,r),this},attach:function(t,e,i){var s;return y(verts[this.vert],camera).apply(t),(s=e.attachment[this.attach])&&p.node.call(this,t,e,i,s),this},elipse:function(t,e,i){var s,r,n,a,h;return a=(n=y(e[this.vert1],i)).x,h=n.y,s=((n=y(e[this.vert2],i)).x-a)/2,r=(n.y-h)/2,t.ellipse(a+s,h+r,s,r,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise),this}},d=function(t,e,i,s){var r,n;return t.save(),this.stroke,v.call(this,t,e),t.globalAlpha=s*(null===this.opacity?1:this.opacity),t.beginPath(),null!=(n=f[this.type||"poly"])&&n.call(this,t,e.data.verts,i,e,s),this.noClose||t.closePath(),"f"!==(r=this.draw||"f&s")&&"f&s"!==r||t.fill(),"s"!==r&&"f&s"!==r||t.stroke(),t.restore(),this},l=1/(u=2e-4),x={x:0,y:0,scale:1,apply:function(t){return t.transform(this.scale,0,0,this.scale,this.x,this.y)}},h=function(){class t{static transform(t,e,i,s){return i=(l+i+s.z)*u,x.x=(t+s.x)*i,x.y=(e+s.y)*i,x.scale=i,x}constructor(t){this.data=t}setData(t){return this.data=t,this.setAngle(this.angle)}setAngle(t){var e,i,s,r;return this.angle=t%=360,this.animation.setAngle(t),(i=this.data.dirs)?(s=i.length)>1?(e=360/s,t<0&&(t+=360),this.model=i[Math.floor(t/e)]):this.model=i[0]:this.model=null,(r=this.data.dirsParts)?(s=r.length)>1?(e=360/s,t<0&&(t+=360),this.parts=r[Math.floor(t/e)]):this.parts=r[0]:this.parts=null}draw2D(t,e=1){var i,s,r,n;if(this.model){for(i in n=[],r=this.model)(s=r[i]).hide?n.push(void 0):n.push(c.call(s,t,this,e));return n}}drawNode(t,e,i=1){if(this.model&&(e=this.model[e]))return c.call(e,t,this,i)}drawPart(t,e,i,s=1){var r,n,a,h,o;for(o=[],n=0,a=(h=e.faces).length;n<a;n++)r=h[n],o.push(d.call(r,t,this,i,s));return o}drawParts(t,e,i=1){var s,r,n,a,h;if(this.parts){for(s in h=[],a=this.parts)(n=a[s]).hide?h.push(void 0):h.push(function(){var s,a,h,o;for(o=[],s=0,a=(h=n.faces).length;s<a;s++)r=h[s],o.push(d.call(r,t,this,e,i));return o}.call(this));return h}}}return t.prototype.attachment=[],t.prototype.animation=new e,t.prototype.angle=0,t}.call(void 0),w=h.transform,y=function(t,e){return w(t.x||0,t.y||0,t.z||0,e)},P=function(){class t{on(t,e){var i;return e&&((i=this.handlers[t])||(this.handlers[t]=i=[]),i.indexOf(e)<0&&i.push(e)),this}off(t,e){var i,s;return e&&(i=this.handlers[t])&&(s=i.indexOf(e))>=0&&i.splice(s,1),this}trigger(t,e){var i,s,r;if(i=this.handlers[t])for(s=0,r=i.length;s<r;s++)i[s].apply(this,e);return this}removeEvent(t){return delete this.handlers[t],this}}return t.prototype.handlers=[],t}.call(void 0),k=function(){var t,e;return e=0,t=0,class extends P{reset(){return e=t=0}getPercent(){return 1-(0!==t?e/t:0)}updatePercent(){return this.trigger("changepercent",[this.getPercent()])}load(i){var s;return s=this,e++,t++,function(){return null!=i&&i.apply(s,arguments),--e<=0&&(s.reset(),s.trigger("load")),s.updatePercent()}}loadJson(t,e){return e=this.load(e),$.getJSON(t+".json").done(e).fail((function(){return e(null)}))}loadImage(t,e){var i;return e=this.load(e),(i=new Image).onload=function(){return e(i)},i.src=t,i}}}.call(void 0),$(document).ready((function(){var t,e,i,s,r,n,a,l,u,c,d,f,p,m;return t=$("#canvas"),i=t.get(0),s=i.getContext("2d",{alpha:!1}),"models/arena",n=new k,a=new h,l=new o,null,e={canvas:i,g:s,x:0,y:0,z:0},(m=function(){return i.width=$(window).width(),i.height=$(window).height()})(),$(window).on("resize",m),u=function(){return l.load(n,"models/arena")},n.on("load",(function(){if(a.setData(l),a.animation.data)return a.animation.setAnim(null,a.angle)})),u(),(p=function(t){var r,n,o;return s.save(),o=i.width,n=i.height,r=o/2,0,s.fillStyle="#fff",s.fillRect(0,0,o,n),s.beginPath(),s.lineWidth=2,s.strokeStyle="#f00",s.moveTo(r,0),s.lineTo(r,n),s.moveTo(0,0),s.lineTo(o,0),s.stroke(),s.translate(r,0),a.animation.play(),a.drawParts(s,e),h.transform(0,0,0,e).apply(s),a.draw2D(s),s.restore(),window.requestAnimationFrame(p)})(0),d=f=0,c=function(t){return e.x+=t.clientX-d,e.y+=t.clientY-f,d=t.clientX,f=t.clientY},t.on("mousedown",(function(e){return d=e.clientX,f=e.clientY,t.on("mousemove",c)})),t.on("touchstart",(function(t){return d=t.touches[0].clientX,f=t.touches[0].clientY})),t.on("touchmove",(function(t){return c(t.touches[0])})),t.on("mouseup",(function(){return t.off("mousemove",c)})),r(document.documentElement),r=function(t){return t.requestFullScreen?t.requestFullScreen():t.mozRequestFullScreen?t.mozRequestFullScreen():t.webkitRequestFullScreen?t.webkitRequestFullScreen():void 0},function(){return document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen?document.webkitCancelFullScreen():void 0}}))}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNwcml0ZS5jb2ZmZWUiLCJhbmltYXRpb24uY29mZmVlIiwibW9kZWwuY29mZmVlIiwiZXZlbnRzLmNvZmZlZSIsImxvYWRlci5jb2ZmZWUiLCJtYWluLmNvZmZlZSJdLCJuYW1lcyI6WyJTcHJpdGUiLCJBbmltYXRpb24iLCJnZXRUaW1lIiwibWFrZUVhc2VJbk91dCIsIm1ha2VFYXNlT3V0Iiwic2V0VGltaW5nRnVuY3Rpb24iLCJ0aW1pbmdGdW5jdGlvbnMiLCJNb2RlbCIsIk1vZGVsRGF0YSIsIlpfT1JJR0lOIiwiWl9UUkFOU0ZPUk0iLCJkcmF3Tm9kZSIsImRyYXdQYXJ0IiwiZHJhd1BhcnRUeXBlIiwiZHJhd1R5cGVPYmoiLCJpbml0U3R5bGUiLCJzZXREcmF3U3R5bGUiLCJzdHlsZVR5cGVGdW5jIiwidHJhbnNmb3JtIiwidHJhbnNmb3JtVmVydCIsInRyc2ZPYmoiLCJFdmVudEVtbWl0ZXIiLCJMb2FkZXIiLCJbb2JqZWN0IE9iamVjdF0iLCJsb2FkZXIiLCJmaWxlIiwic3ByaXRlIiwiY2FjaGUiLCJsb2FkIiwibG9hZEpzb24iLCJkYXRhMSIsInRoaXMiLCJkYXRhIiwibG9hZEltYWdlIiwidGV4dHVyZSIsImciLCJmcmFtZSIsIngiLCJ5IiwiaW5kZXgiLCJjb25zdHJ1Y3RvciIsIk9iamVjdCIsImRyYXdJbWFnZSIsInciLCJoIiwiY3giLCJjeSIsIkFycmF5IiwiZHJhdyIsIk1hdGgiLCJmbG9vciIsImxlbmdodCIsIlN0cmluZyIsIkFuaW1hdGlvbkRhdGEiLCJhbmltRGF0YSIsImtleSIsInJlc3VsdHMiLCJ2YWx1ZSIsIkRhdGUiLCJ0aW1pbmciLCJ0aW1lIiwibmFtZSIsImxpbmVhciIsImVhc2VPdXQiLCJlYXNlSW5PdXQiLCJzaW4iLCJhY29zIiwiYSIsImIiLCJwb3ciLCJzdGFydFRpbWUiLCJkZWx0YVRpbWUiLCJhbmdsZSIsImFuaW0iLCJyZXNldCIsImR1cmF0aW9uIiwic2V0QW5nbGUiLCJkQW5nbGUiLCJkaXJzIiwibiIsImRlbHRhIiwic2NhbGUiLCJsb29wIiwibm9kZSIsIm5vZGVQYXRoIiwibm9kZU5hbWUiLCJpIiwibGVuIiwicG9pbnQiLCJwcm9wIiwicHJvcHMiLCJwcm9wc1VzZWQiLCJyZWYiLCJyZWYxIiwidEZ1bmMiLCJ0aW1lc3RvcHMiLCJ0b1ZhbCIsImxlbmd0aCIsImVuZCIsInN0YXJ0IiwiZnVuYyIsIk51bWJlciIsIndvcmsiLCJ0byIsImFPYmoiLCJtb2RlbCIsImltYWdlIiwiaW1hZ2VzRGF0YSIsImoiLCJtb2RlbHNEYXRhIiwibm9kZXMiLCJub2Rlc0xvYWQiLCJzcHJpdGVzRGF0YSIsImltYWdlcyIsInNwcml0ZXMiLCJtb2RlbHMiLCJiZWZvcmUiLCJhZnRlciIsImxpbmUiLCJtb3ZlVG8iLCJ4MSIsInkxIiwibGluZVRvIiwieDIiLCJ5MiIsInJlY3QiLCJ3aWR0aCIsImhlaWdodCIsInJlY3RSb3VuZCIsInIiLCJub0Nsb3NlIiwicmFkaXVzIiwiYXJjVG8iLCJhcmMiLCJzdGFydEFuZ2xlIiwiUEkiLCJlbmRBbmdsZSIsImNsb2Nrd2lzZSIsImVsaXBzZSIsImVsbGlwc2UiLCJyeCIsInJ5Iiwicm90YXRpb24iLCJwYXRoIiwiUGF0aDJEIiwidHJhbnNsYXRlIiwiZmlsbCIsInN0cm9rZSIsIm9wYWNpdHkiLCJtIiwicm9vdCIsInREYXRhIiwidE1vZGVsIiwiZGlyZWN0aW9uIiwiY2FsbCIsImF0dGFjaCIsImF0dGFjaG1lbnQiLCJ0ZXh0IiwiZHJhd1RleHQiLCJmb250IiwidGV4dEFsaWduIiwidGV4dEJhc2VsaW5lIiwiZmlsbFRleHQiLCJtYXhXaWR0aCIsInN0cm9rZVRleHQiLCJjb2xvclN0b3AiLCJncmFkaWVudCIsImNyZWF0ZUxpbmVhckdyYWRpZW50IiwieDAiLCJ5MCIsImFkZENvbG9yU3RvcCIsInBvcyIsImNvbG9yIiwicmFkaWFsIiwiY3JlYXRlUmFkaWFsR3JhZGllbnQiLCJyMCIsInIxIiwicGF0dGVybiIsImNyZWF0ZVBhdHRlcm4iLCJyZXBldGl0aW9uIiwic3R5bGUiLCJzdHJva2VTdHlsZSIsImZpbGxTdHlsZSIsImxpbmVXaWR0aCIsImxpbmVDYXAiLCJsaW5lSm9pbiIsImxpbmVEYXNoT2Zmc2V0IiwibUFzY2FsZSIsInJlZjIiLCJzYXZlIiwiYW5pbWF0aW9uIiwiYW5pbWF0ZSIsInNjYWxlWCIsInNrZXdZIiwic2tld1giLCJzY2FsZVkiLCJvcmlnWCIsIm9yaWdZIiwibW9kZWxBbmdsZVNjYWxlIiwicm90YXRlIiwibm9TaGFkb3ciLCJzaGFkb3dCbHVyIiwic2hhZG93T2Zmc2V0WCIsInNoYWRvd09mZnNldFkiLCJzaGFkb3dDb2xvciIsImdsb2JhbEFscGhhIiwicmVjaXZlUHJvcHMiLCJoaWRlIiwiYmVnaW5QYXRoIiwiY2xvc2VQYXRoIiwiY2xpcCIsInJlc3RvcmUiLCJwb2x5IiwidmVydHMiLCJjYW1lcmEiLCJ2IiwieGMiLCJ5YyIsInoiLCJ6dCIsInBhcnQiLCJjIiwiZmFjZSIsInBhcnRzIiwidFBhcnRzIiwiZGlyc1BhcnRzIiwidmVydCIsImFwcGx5IiwidmVydDEiLCJ2ZXJ0MiIsIl8iLCJldmVudCIsImNhbGxiYWNrIiwiaGFuZGxlciIsImhhbmRsZXJzIiwiaW5kZXhPZiIsInB1c2giLCJzcGxpY2UiLCJhcmdzIiwibG9hZFJlc051bWJlciIsImFsbFJlc0xvYWRlciIsInRyaWdnZXIiLCJnZXRQZXJjZW50IiwiX3RoaXMiLCJhcmd1bWVudHMiLCJ1cGRhdGVQZXJjZW50IiwiJCIsImdldEpTT04iLCJkb25lIiwiZmFpbCIsImltZyIsIkltYWdlIiwib25sb2FkIiwic3JjIiwiZG9jdW1lbnQiLCJyZWFkeSIsIiRjYW52YXMiLCJjYW52YXMiLCJjb250ZXh0IiwibGF1bmNoRnVsbFNjcmVlbiIsIm1vZGVsRGF0YSIsIm1vZGVsUmVmcmVzaCIsIm1vdmVDYW1lcmEiLCJvbGRNb3VzZVgiLCJvbGRNb3VzZVkiLCJyZW5kZXIiLCJyZXNpemUiLCJnZXQiLCJnZXRDb250ZXh0IiwiYWxwaGEiLCJ3aW5kb3ciLCJvbiIsInNldERhdGEiLCJzZXRBbmltIiwiZmlsbFJlY3QiLCJwbGF5IiwiZHJhd1BhcnRzIiwiZHJhdzJEIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiZSIsImNsaWVudFgiLCJjbGllbnRZIiwidG91Y2hlcyIsIm9mZiIsImRvY3VtZW50RWxlbWVudCIsImVsZW1lbnQiLCJyZXF1ZXN0RnVsbFNjcmVlbiIsIm1velJlcXVlc3RGdWxsU2NyZWVuIiwid2Via2l0UmVxdWVzdEZ1bGxTY3JlZW4iLCJjYW5jZWxGdWxsU2NyZWVuIiwibW96Q2FuY2VsRnVsbFNjcmVlbiIsIndlYmtpdENhbmNlbEZ1bGxTY3JlZW4iXSwibWFwcGluZ3MiOiJ5QkFBQSxJQUFBQSxFQ0FBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQ0FBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQ0FBQyxFQ0FBQyxFSkFNdEIsRUFBQSxXQUFOLE1BQUFBLEVBR1F1QixZQUFDQyxFQUFRQyxPQUNmQyxTQUFBQSxFQUFTMUIsRUFBTzJCLE1BQU1GLE9BRXJCQyxFQUFTLElBQUkxQixHQUNONEIsS0FBS0osRUFBUUMsR0FDcEJ6QixFQUFPMkIsTUFBTUYsR0FBUUMsR0FDdEJBLEVBRURILEtBQU9DLEVBQVFDLFVBQ2RELEVBQU9LLFNBQVNKLEVBQU1LLElBQUNDLEtBQUNDLEtBQUFGLElBQ3hCTixFQUFPUyxVQUFVUixFQUFPLE9BQVFTLElBQUNILEtBQUNHLFFBQUFBLElBRW5DWCxLQUFPWSxFQUFHQyxFQUFPQyxFQUFHQyxFQUFHQyxFQUFRLE9BQzlCUCxFQUNBLEdBREFBLEVBQU9ELEtBQUNDLFlBRUFJLEVBQU1JLGtCQUNQQyxPQUNKTixFQUFFTyxVQUFVWCxLQUFDRyxRQUNaRSxFQUFNQyxFQUFHRCxFQUFNRSxFQUFHRixFQUFNTyxFQUFHUCxFQUFNUSxFQUNqQ1AsRUFBSUQsRUFBTVMsR0FBSVAsRUFBSUYsRUFBTVUsR0FBSVYsRUFBTU8sRUFB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RUcsUUFBUSxHQUFHRixRQUN6QmhCLEVBQVllLEVBQUVHLFFBQVEsR0FBR0QsV0FFMUJ6QixFQUFRZSxHQUFHLGFBQWEsU0FBQ1EsVUFDeEJqQixFQUFXaUIsRUFBRUcsUUFBUSxPQUV0QjFCLEVBQVFlLEdBQUcsV0FBVyxrQkFDckJmLEVBQVEyQixJQUFJLFlBQWFyQixNQUUxQkgsRUFBaUJMLFNBQVM4QixpQkFFMUJ6QixFQUFtQixTQUFDMEIsR0FDbkIsT0FBR0EsRUFBUUMsa0JBQ1ZELEVBQVFDLG9CQUNERCxFQUFRRSxxQkFDZkYsRUFBUUUsdUJBQ0RGLEVBQVFHLHdCQUNmSCxFQUFRRywrQkFESixHQUdhLFdBQ2xCLE9BQUdsQyxTQUFTbUMsaUJBQ1huQyxTQUFTbUMsbUJBQ0ZuQyxTQUFTb0Msb0JBQ2hCcEMsU0FBU29DLHNCQUNGcEMsU0FBU3FDLHVCQUNoQnJDLFNBQVNxQyw4QkFETCIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgU3ByaXRlXHJcblx0QGNhY2hlOiBbXVxyXG5cclxuXHRAbG9hZDogKGxvYWRlciwgZmlsZSkgLT5cclxuXHRcdHNwcml0ZSA9IFNwcml0ZS5jYWNoZVtmaWxlXVxyXG5cdFx0dW5sZXNzIHNwcml0ZVxyXG5cdFx0XHRzcHJpdGUgPSBuZXcgU3ByaXRlXHJcblx0XHRcdHNwcml0ZS5sb2FkIGxvYWRlciwgZmlsZVxyXG5cdFx0XHRTcHJpdGUuY2FjaGVbZmlsZV0gPSBzcHJpdGVcclxuXHRcdHNwcml0ZVxyXG5cclxuXHRsb2FkOiAobG9hZGVyLCBmaWxlKSAtPlxyXG5cdFx0bG9hZGVyLmxvYWRKc29uIGZpbGUsIChAZGF0YSkgPT5cclxuXHRcdGxvYWRlci5sb2FkSW1hZ2UgZmlsZSArICcucG5nJywgKEB0ZXh0dXJlKSA9PlxyXG5cclxuXHRkcmF3OiAoZywgZnJhbWUsIHgsIHksIGluZGV4ID0gMCkgLT5cclxuXHRcdGRhdGEgPSBAZGF0YVxyXG5cdFx0aWYgZGF0YVxyXG5cdFx0XHRzd2l0Y2ggZnJhbWUuY29uc3RydWN0b3JcclxuXHRcdFx0XHR3aGVuIE9iamVjdFxyXG5cdFx0XHRcdFx0Zy5kcmF3SW1hZ2UgQHRleHR1cmUsXHJcblx0XHRcdFx0XHRcdGZyYW1lLngsIGZyYW1lLnksIGZyYW1lLncsIGZyYW1lLmgsXHJcblx0XHRcdFx0XHRcdHggKyBmcmFtZS5jeCwgeSArIGZyYW1lLmN5LCBmcmFtZS53LCBmcmFtZS5oXHJcblx0XHRcdFx0d2hlbiBBcnJheVxyXG5cdFx0XHRcdFx0QGRyYXcgZywgZnJhbWVbTWF0aC5mbG9vcihpbmRleCkgJSBmcmFtZS5sZW5naHRdLCB4LCB5XHJcblx0XHRcdFx0d2hlbiBTdHJpbmdcclxuXHRcdFx0XHRcdEBkcmF3IGcsIGRhdGFbZnJhbWVdLCB4LCB5LCBpbmRleFxyXG5cdFx0dGhpc1xyXG5cclxuZXhwb3J0IHsgU3ByaXRlIH0iLCJjbGFzcyBBbmltYXRpb25EYXRhXHJcblx0QGNhY2hlOiBbXVxyXG5cclxuXHRAbG9hZDogKGxvYWRlciwgZmlsZSkgLT5cclxuXHRcdGFuaW1EYXRhID0gQW5pbWF0aW9uRGF0YS5jYWNoZVtmaWxlXVxyXG5cdFx0dW5sZXNzIGFuaW1EYXRhXHJcblx0XHRcdGFuaW1EYXRhID0gbmV3IEFuaW1hdGlvbkRhdGFcclxuXHRcdFx0YW5pbURhdGEubG9hZCBsb2FkZXIsIGZpbGVcclxuXHRcdFx0QW5pbWF0aW9uRGF0YS5jYWNoZVtmaWxlXSA9IGFuaW1EYXRhXHJcblx0XHRhbmltRGF0YVxyXG5cclxuXHRsb2FkOiAobG9hZGVyLCBmaWxlKSAtPlxyXG5cdFx0bG9hZGVyLmxvYWRKc29uIGZpbGUsIChkYXRhKSA9PlxyXG5cdFx0XHRpZiBkYXRhXHJcblx0XHRcdFx0Zm9yIGtleSwgdmFsdWUgb2YgZGF0YVxyXG5cdFx0XHRcdFx0dGhpc1trZXldID0gdmFsdWVcclxuXHJcbmdldFRpbWUgPSAtPlxyXG5cdG5ldyBEYXRlKCkuZ2V0VGltZSgpIC8gMTAwMFxyXG5cclxubWFrZUVhc2VPdXQgPSAodGltaW5nKSAtPlxyXG5cdCh0aW1lKSAtPlxyXG5cdFx0MSAtIHRpbWluZygxIC0gdGltZSlcclxuXHJcbm1ha2VFYXNlSW5PdXQgPSAodGltaW5nKSAtPlxyXG5cdCh0aW1lKSAtPlxyXG5cdFx0aWYgdGltZSA8IDAuNVxyXG5cdFx0XHR0aW1pbmcoMiAqIHRpbWUpIC8gMlxyXG5cdFx0ZWxzZVxyXG5cdFx0XHQoMiAtIHRpbWluZygyICogKDEgLSB0aW1lKSkpIC8gMlxyXG5cclxuXHJcbnNldFRpbWluZ0Z1bmN0aW9uID0gKG5hbWUsIHRpbWluZykgLT5cclxuXHR0aW1pbmdGdW5jdGlvbnNbbmFtZV0gPSB0aW1pbmdcclxuXHR0aW1pbmdGdW5jdGlvbnNbbmFtZSArICdFYXNlT3V0J10gPSBtYWtlRWFzZU91dCB0aW1pbmdcclxuXHR0aW1pbmdGdW5jdGlvbnNbbmFtZSArICdFYXNlSW5PdXQnXSA9IG1ha2VFYXNlSW5PdXQgdGltaW5nXHJcblxyXG50aW1pbmdGdW5jdGlvbnMgPVxyXG5cdGxpbmVhcjogKHRpbWUpIC0+XHJcblx0XHR0aW1lXHJcblxyXG5cdGVhc2VPdXQ6ICh0aW1lKSAtPlxyXG5cdFx0MSAtIHRpbWVcclxuXHJcblx0ZWFzZUluT3V0OiAodGltZSkgLT5cclxuXHRcdGlmIHRpbWUgPCAwLjVcclxuXHRcdFx0dGltZSAqIDJcclxuXHRcdGVsc2VcclxuXHRcdFx0MiAtIHRpbWUgKiAyXHJcblxyXG5zZXRUaW1pbmdGdW5jdGlvbiAncXVhZCcsICh0aW1lKSAtPlxyXG5cdHRpbWUgKiB0aW1lXHJcblxyXG5zZXRUaW1pbmdGdW5jdGlvbiAnY2lyY2xlJywgKHRpbWUpIC0+XHJcblx0MSAtIE1hdGguc2luIE1hdGguYWNvcyB0aW1lXHJcblxyXG5zZXRUaW1pbmdGdW5jdGlvbiAnYm91bmNlJywgKHRpbWUpIC0+XHJcblx0YSA9IDBcclxuXHRiID0gMVxyXG5cdHdoaWxlIHRydWVcclxuXHRcdGlmIHRpbWUgPj0gKDcgLSA0ICogYSkgLyAxMVxyXG5cdFx0XHRyZXR1cm4gLU1hdGgucG93KCgxMSAtIDYgKiBhIC0gMTEgKiB0aW1lKSAvIDQsIDIpICsgTWF0aC5wb3coYiwgMilcclxuXHRcdGEgKz0gYlxyXG5cdFx0YiAvPSAyXHJcblxyXG5jbGFzcyBBbmltYXRpb25cclxuXHRAZ2V0VGltZTogZ2V0VGltZVxyXG5cclxuXHRsb29wOiB0cnVlXHJcblx0c3RhcnRUaW1lOiAwXHJcblx0ZHVyYXRpb246IDBcclxuXHRkZWx0YVRpbWU6IDBcclxuXHRzY2FsZTogMVxyXG5cclxuXHRAcHJvcHM6IFtdXHJcblx0QHByb3BzVXNlZDogW11cclxuXHJcblx0cmVzZXQ6IC0+XHJcblx0XHRAc3RhcnRUaW1lID0gZ2V0VGltZSgpXHJcblx0XHRAZGVsdGFUaW1lID0gMFxyXG5cdFx0dGhpc1xyXG5cclxuXHRzZXRBbmltOiAobmFtZSwgYW5nbGUgPSAwLCBkYXRhID0gQGRhdGEpIC0+XHJcblx0XHRAYW5pbSA9IGRhdGE/W25hbWVdXHJcblx0XHRAcmVzZXQoKVxyXG5cdFx0aWYgQGFuaW1cclxuXHRcdFx0QGR1cmF0aW9uID0gaWYgQGFuaW0gdGhlbiBAYW5pbS5kdXJhdGlvbiBlbHNlIDBcclxuXHRcdFx0QHNldEFuZ2xlIGFuZ2xlXHJcblx0XHR0aGlzXHJcblxyXG5cdHNldEFuZ2xlOiAoYW5nbGUpIC0+XHJcblx0XHRAZnJhbWUgPSBudWxsXHJcblx0XHRpZiBAYW5pbVxyXG5cdFx0XHRhbmdsZSA9IGFuZ2xlICUgMzYwXHJcblx0XHRcdGRpcnMgPSBAYW5pbS5kaXJzXHJcblx0XHRcdGlmIGRpcnNcclxuXHRcdFx0XHRuID0gZGlycy5sZW5naHRcclxuXHRcdFx0XHRpZiBuID4gMVxyXG5cdFx0XHRcdFx0ZEFuZ2xlID0gMzYwIC8gblxyXG5cdFx0XHRcdFx0IyBhbmdsZSArPSBkQW5nbGUgMlxyXG5cdFx0XHRcdFx0aWYgYW5nbGUgPCAwIHRoZW4gYW5nbGUgKz0gMzYwXHJcblx0XHRcdFx0XHRAZnJhbWUgPSBkaXJzW01hdGguZmxvb3IoYW5nbGUgLyBkQW5nbGUpXVxyXG5cdFx0XHRcdGVsc2VcclxuXHRcdFx0XHRcdEBmcmFtZSA9IGRpcnNbMF1cclxuXHRcdHRoaXNcclxuXHJcblx0cGxheTogKHRpbWUpIC0+XHJcblx0XHR0aW1lID0gdGltZSB8fCBnZXRUaW1lKClcclxuXHRcdEBkZWx0YVRpbWUgPSBkZWx0YSA9ICh0aW1lIC0gQHN0YXJ0VGltZSkgKiBAc2NhbGVcclxuXHRcdGR1cmF0aW9uID0gQGR1cmF0aW9uXHJcblx0XHR1bmxlc3MgZHVyYXRpb25cclxuXHRcdFx0cmV0dXJuIGZhbHNlXHJcblx0XHRpZiBkZWx0YSA+IGR1cmF0aW9uXHJcblx0XHRcdGlmIEBsb29wXHJcblx0XHRcdFx0QGRlbHRhVGltZSAlPSBkdXJhdGlvblxyXG5cdFx0XHRlbHNlXHJcblx0XHRcdFx0cmV0dXJuIGZhbHNlXHJcblx0XHR0cnVlXHJcblxyXG5cdGFuaW1hdGU6IChub2RlLCBub2RlUGF0aCA9IG5vZGUubm9kZVBhdGgsIG5vZGVOYW1lID0gbm9kZS5ub2RlTmFtZSkgLT5cclxuXHRcdGZyYW1lID0gQGZyYW1lXHJcblx0XHRpZiBmcmFtZVxyXG5cdFx0XHR0aW1lc3RvcHMgPSBmcmFtZVtub2RlUGF0aF0gfHwgZnJhbWVbbm9kZU5hbWVdXHJcblx0XHRcdGlmIHRpbWVzdG9wc1xyXG5cdFx0XHRcdGRlbHRhID0gQGRlbHRhVGltZVxyXG5cdFx0XHRcdHByb3BzID0gQW5pbWF0aW9uLnByb3BzXHJcblx0XHRcdFx0cHJvcHNVc2VkID0gQW5pbWF0aW9uLnByb3BzVXNlZFxyXG5cdFx0XHRcdGZvciBwb2ludCBpbiB0aW1lc3RvcHNcclxuXHRcdFx0XHRcdGlmIGRlbHRhID49IHBvaW50LmVuZFxyXG5cdFx0XHRcdFx0XHRmb3IgbmFtZSwgdG9WYWwgb2YgcG9pbnQudG9cclxuXHRcdFx0XHRcdFx0XHR1bmxlc3MgcHJvcHNVc2VkW25hbWVdXHJcblx0XHRcdFx0XHRcdFx0XHRwcm9wc1tuYW1lXSA9IG5vZGVbbmFtZV1cclxuXHRcdFx0XHRcdFx0XHRcdHByb3BzVXNlZFtuYW1lXSA9IHRydWVcclxuXHRcdFx0XHRcdFx0XHRub2RlW25hbWVdID0gdG9WYWxcclxuXHRcdFx0XHRcdGVsc2UgaWYgZGVsdGEgPj0gcG9pbnQuc3RhcnRcclxuXHRcdFx0XHRcdFx0aWYgcG9pbnQuZnVuY1xyXG5cdFx0XHRcdFx0XHRcdHRGdW5jID0gdGltaW5nRnVuY3Rpb25zW3BvaW50LmZ1bmNdXHJcblx0XHRcdFx0XHRcdGVsc2VcclxuXHRcdFx0XHRcdFx0XHR0RnVuYyA9IHRpbWluZ0Z1bmN0aW9ucy5saW5lYXJcclxuXHRcdFx0XHRcdFx0I1xyXG5cdFx0XHRcdFx0XHRmb3IgbmFtZSwgdG9WYWwgb2YgcG9pbnQudG9cclxuXHRcdFx0XHRcdFx0XHRwcm9wID0gbm9kZVtuYW1lXVxyXG5cdFx0XHRcdFx0XHRcdHVubGVzcyBwcm9wc1VzZWRbbmFtZV1cclxuXHRcdFx0XHRcdFx0XHRcdHByb3BzW25hbWVdID0gcHJvcFxyXG5cdFx0XHRcdFx0XHRcdFx0cHJvcHNVc2VkW25hbWVdID0gdHJ1ZVxyXG5cdFx0XHRcdFx0XHRcdHByb3AgfHw9IDBcclxuXHRcdFx0XHRcdFx0XHRpZiB0b1ZhbC5jb25zdHJ1Y3RvciA9PSBOdW1iZXJcclxuXHRcdFx0XHRcdFx0XHRcdHRpbWUgPSB0RnVuYygoZGVsdGEgLSBwb2ludC5zdGFydCkgLyAocG9pbnQuZW5kIC0gcG9pbnQuc3RhcnQpKVxyXG5cdFx0XHRcdFx0XHRcdFx0bm9kZVtuYW1lXSA9ICh0b1ZhbCAtIHByb3ApICogdGltZSArIHByb3BcclxuXHRcdFx0XHRcdFx0XHRlbHNlXHJcblx0XHRcdFx0XHRcdFx0XHRub2RlW25hbWVdID0gdG9WYWxcclxuXHRcdHRoaXNcclxuXHJcblx0cmVjaXZlUHJvcHM6IChub2RlKSAtPlxyXG5cdFx0cHJvcHMgPSBBbmltYXRpb24ucHJvcHNcclxuXHRcdHByb3BzVXNlZCA9IEFuaW1hdGlvbi5wcm9wc1VzZWRcclxuXHRcdGZvciBuYW1lLCB1c2Ugb2YgcHJvcHNVc2VkXHJcblx0XHRcdGlmIHVzZVxyXG5cdFx0XHRcdG5vZGVbbmFtZV0gPSBwcm9wc1tuYW1lXVxyXG5cdFx0XHRcdGRlbGV0ZSBwcm9wc1VzZWRbbmFtZV1cclxuXHRcdHRoaXNcclxuXHJcblx0Y3JlYXRlV29ya0ZyYW1lOiAtPlxyXG5cdFx0QGxvb3AgPSBmYWxzZVxyXG5cdFx0QGZyYW1lID1cclxuXHRcdFx0d29yazogW1xyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdHN0YXJ0OiAwXHJcblx0XHRcdFx0XHRlbmQ6IDBcclxuXHRcdFx0XHRcdHRvOiB7fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XVxyXG5cdFx0dGhpc1xyXG5cclxuXHRyZXNldFdvcms6IC0+XHJcblx0XHRwcm9wc1VzZWQgPSBBbmltYXRpb24ucHJvcHNVc2VkXHJcblx0XHRmb3IgbmFtZSwgdXNlIG9mIHByb3BzVXNlZFxyXG5cdFx0XHRpZiB1c2UgdGhlbiBwcm9wc1VzZWRbbmFtZV0gPSBmYWxzZVxyXG5cdFx0dGhpc1xyXG5cclxuXHRjbGVhcldvcms6IC0+XHJcblx0XHRwcm9wc1VzZWQgPSBBbmltYXRpb24ucHJvcHNVc2VkXHJcblx0XHRhT2JqID0gQGZyYW1lLndvcmtbMF1cclxuXHRcdGFPYmouc3RhcnQgPSBhT2JqLmVuZCA9IDBcclxuXHRcdHRvID0gXHJcblx0XHRmb3IgbmFtZSwgXyBvZiB0b1xyXG5cdFx0XHRkZWxldGUgdG9bbmFtZV1cclxuXHRcdHRoaXNcclxuXHJcblx0YW5pbWF0ZVByb3BzOiAocHJvcHMsIGR1cmF0aW9uLCBmdW5jKSAtPlxyXG5cdFx0QGR1cmF0aW9uID0gZHVyYXRpb25cclxuXHRcdGFPYmogPSBAZnJhbWUud29ya1swXVxyXG5cdFx0YU9iai5lbmQgPSBkdXJhdGlvblxyXG5cdFx0YU9iai5mdW5jID0gZnVuY1xyXG5cdFx0dG8gPSBhT2JqLnRvXHJcblx0XHRmb3IgbmFtZSwgcHJvcCBvZiBwcm9wc1xyXG5cdFx0XHR0b1tuYW1lXSA9IHByb3BcclxuXHRcdEByZXNldCgpXHJcblx0XHR0aGlzXHJcblxyXG5leHBvcnQgeyBBbmltYXRpb25EYXRhLCBBbmltYXRpb24gfSIsImltcG9ydCB7IFNwcml0ZSB9IGZyb20gJy4vc3ByaXRlJ1xyXG5pbXBvcnQgeyBBbmltYXRpb24gfSBmcm9tICcuL2FuaW1hdGlvbidcclxuXHJcbmNsYXNzIE1vZGVsRGF0YVxyXG5cdEBjYWNoZTogW11cclxuXHJcblx0QGxvYWQ6IChsb2FkZXIsIGZpbGUpIC0+XHJcblx0XHRtb2RlbCA9IE1vZGVsRGF0YS5jYWNoZVtmaWxlXVxyXG5cdFx0dW5sZXNzIG1vZGVsXHJcblx0XHRcdG1vZGVsID0gbmV3IE1vZGVsRGF0YVxyXG5cdFx0XHRtb2RlbC5sb2FkIGxvYWRlciwgZmlsZVxyXG5cdFx0XHRNb2RlbERhdGEuY2FjaGVbZmlsZV0gPSBtb2RlbFxyXG5cdFx0bW9kZWxcclxuXHJcblx0bG9hZDogKGxvYWRlciwgZmlsZSkgLT5cclxuXHRcdGxvYWRlci5sb2FkSnNvbiBmaWxlLCAoZGF0YSkgPT5cclxuXHRcdFx0aWYgZGF0YVxyXG5cdFx0XHRcdGZvciBrZXksIHZhbHVlIG9mIGRhdGFcclxuXHRcdFx0XHRcdHRoaXNba2V5XSA9IHZhbHVlXHJcblxyXG5cdFx0XHRcdGlmIEBpbWFnZXNcclxuXHRcdFx0XHRcdGltYWdlc0RhdGEgPSBAaW1hZ2VzXHJcblx0XHRcdFx0XHRAaW1hZ2VzID0gW11cclxuXHRcdFx0XHRcdGZvciBrZXksIGltYWdlIG9mIGltYWdlc0RhdGFcclxuXHRcdFx0XHRcdFx0QGltYWdlc1trZXldID0gbG9hZGVyLmxvYWRJbWFnZSBpbWFnZVxyXG5cclxuXHRcdFx0XHRpZiBAc3ByaXRlc1xyXG5cdFx0XHRcdFx0c3ByaXRlc0RhdGEgPSBAc3ByaXRlc1xyXG5cdFx0XHRcdFx0QHNwcml0ZXMgPSBbXVxyXG5cdFx0XHRcdFx0Zm9yIGtleSwgc3ByaXRlIG9mIHNwcml0ZXNEYXRhXHJcblx0XHRcdFx0XHRcdEBzcHJpdGVzW2tleV0gPSBTcHJpdGUubG9hZCBsb2FkZXIsIHNwcml0ZVxyXG5cclxuXHRcdFx0XHRpZiBAbW9kZWxzXHJcblx0XHRcdFx0XHRtb2RlbHNEYXRhID0gQG1vZGVsc1xyXG5cdFx0XHRcdFx0QG1vZGVscyA9IFtdXHJcblx0XHRcdFx0XHRmb3Iga2V5LCBtb2RlbCBvZiBtb2RlbHNEYXRhXHJcblx0XHRcdFx0XHRcdEBtb2RlbHNba2V5XSA9IE1vZGVsRGF0YS5sb2FkIGxvYWRlciwgbW9kZWxcclxuXHJcblx0XHRcdFx0bm9kZXNMb2FkID0gKG5vZGVzLCBub2RlUGF0aCA9ICcnKSAtPlxyXG5cdFx0XHRcdFx0Zm9yIG5hbWUsIG5vZGUgb2Ygbm9kZXNcclxuXHRcdFx0XHRcdFx0bm9kZS5ub2RlUGF0aCA9IG5vZGVQYXRoICsgbmFtZVxyXG5cdFx0XHRcdFx0XHRub2RlLm5vZGVOYW1lID0gJ0AnICsgbmFtZVxyXG5cdFx0XHRcdFx0XHRpZiBub2RlLmJlZm9yZVxyXG5cdFx0XHRcdFx0XHRcdG5vZGVzTG9hZCBub2RlLmJlZm9yZSwgbm9kZS5ub2RlUGF0aCArICc8J1xyXG5cdFx0XHRcdFx0XHRpZiBub2RlLmFmdGVyXHJcblx0XHRcdFx0XHRcdFx0bm9kZXNMb2FkIG5vZGUuYWZ0ZXIsIG5vZGUubm9kZVBhdGggKyAnPidcclxuXHJcblx0XHRcdFx0aWYgQGRpcnNcclxuXHRcdFx0XHRcdGZvciBub2RlcyBpbiBAZGlyc1xyXG5cdFx0XHRcdFx0XHRub2Rlc0xvYWQgbm9kZXNcclxuXHJcblxyXG5kcmF3VHlwZU9iaiA9XHJcblx0bGluZTogKGcpIC0+XHJcblx0XHRnLm1vdmVUbyBAeDEgfHwgMCwgQHkxIHx8IDBcclxuXHRcdGcubGluZVRvIEB4MiB8fCAwLCBAeTIgfHwgMFxyXG5cdFx0dGhpc1xyXG5cclxuXHRyZWN0OiAoZykgLT5cclxuXHRcdGcucmVjdCBAeCB8fCAwLCBAeSB8fCAwLCBAd2lkdGggfHwgMSwgQGhlaWdodCB8fCAxXHJcblx0XHR0aGlzXHJcblxyXG5cdHJlY3RSb3VuZDogKGcpIC0+XHJcblx0XHRAbm9DbG9zZSA9IGZhbHNlXHJcblx0XHR4ID0gQHggfHwgMFxyXG5cdFx0eSA9IEB5IHx8IDBcclxuXHRcdHcgPSBAd2lkdGhcclxuXHRcdGggPSBAaGVpZ2h0XHJcblx0XHRyID0gQHJhZGl1c1xyXG5cdFx0aWYgdyA8IDIgKiByIHRoZW4gciA9IHcgLyAyXHJcblx0XHRpZiBoIDwgMiAqIHIgdGhlbiByID0gaCAvIDJcclxuXHJcblx0XHRnLm1vdmVUbyB4ICsgciwgeVxyXG5cdFx0Zy5hcmNUbyAgeCArIHcsIHksICAgICB4ICsgdywgeSArIGgsIHJcclxuXHRcdGcuYXJjVG8gIHggKyB3LCB5ICsgaCwgeCwgICAgIHkgKyBoLCByXHJcblx0XHRnLmFyY1RvICB4LCAgICAgeSArIGgsIHgsICAgICB5LCAgICAgclxyXG5cdFx0Zy5hcmNUbyAgeCwgICAgIHksICAgICB4ICsgdywgeSwgICAgIHJcclxuXHRcdHRoaXNcclxuXHJcblx0YXJjOiAoZykgLT5cclxuXHRcdGcuYXJjKFxyXG5cdFx0XHRAeCB8fCAwLFxyXG5cdFx0XHRAeSB8fCAwLFxyXG5cdFx0XHRAcmFkaXVzLFxyXG5cdFx0XHQoQHN0YXJ0QW5nbGUgfHwgMCkgKiBNYXRoLlBJIC8gMTgwLFxyXG5cdFx0XHQoQGVuZEFuZ2xlIHx8IDM2MCkgKiBNYXRoLlBJIC8gMTgwLFxyXG5cdFx0XHRpZiBAY2xvY2t3aXNlIHRoZW4gZmFsc2UgZWxzZSB0cnVlKVxyXG5cdFx0dGhpc1xyXG5cclxuXHRlbGlwc2U6IChnKSAtPlxyXG5cdFx0Zy5lbGxpcHNlKFxyXG5cdFx0XHRAeCB8fCAwLFxyXG5cdFx0XHRAeSB8fCAwLFxyXG5cdFx0XHRAcngsXHJcblx0XHRcdEByeSxcclxuXHRcdFx0KEByb3RhdGlvbiB8fCAwKSAqIE1hdGguUEkgLyAxODAsXHJcblx0XHRcdChAc3RhcnRBbmdsZSB8fCAwKSAqIE1hdGguUEkgLyAxODAsXHJcblx0XHRcdChAZW5kQW5nbGUgfHwgMzYwKSAqIE1hdGguUEkgLyAxODAsXHJcblx0XHRcdGlmIEBjbG9ja3dpc2UgdGhlbiBmYWxzZSBlbHNlIHRydWUpXHJcblx0XHR0aGlzXHJcblxyXG5cdHBhdGg6IChnKSAtPlxyXG5cdFx0eCA9IEB4IHx8IDBcclxuXHRcdHkgPSBAeSB8fCAwXHJcblx0XHRpZiB0eXBlb2YgQHBhdGggPT0gJ3N0cmluZydcclxuXHRcdFx0QHBhdGggPSBuZXcgUGF0aDJEIEBwYXRoXHJcblx0XHQjXHJcblx0XHRAbm9DbG9zZSA9IHRydWVcclxuXHRcdGcudHJhbnNsYXRlIHgsIHlcclxuXHRcdGRyYXcgPSBAZHJhdyB8fCAnZiZzJ1xyXG5cdFx0aWYgZHJhdyA9PSAnZicgfHwgZHJhdyA9PSAnZiZzJ1xyXG5cdFx0XHRnLmZpbGwgQHBhdGhcclxuXHRcdGlmIGRyYXcgPT0gJ3MnIHx8IGRyYXcgPT0gJ2YmcydcclxuXHRcdFx0Zy5zdHJva2UgQHBhdGhcclxuXHRcdHRoaXNcclxuXHJcblx0bm9kZTogKGcsIG1vZGVsLCBvcGFjaXR5LCBkYXRhKSAtPlxyXG5cdFx0QG5vQ2xvc2UgPSBAZHJhdyA9IHRydWVcclxuXHRcdCMgU2F2ZSBjdXJyZW50IG1vZGVsIGRhdGFcclxuXHRcdHREYXRhID0gbW9kZWwuZGF0YVxyXG5cdFx0dE1vZGVsID0gbW9kZWwubW9kZWxcclxuXHRcdCMgU2VsZWN0IG1vZGVsXHJcblx0XHRtID0gZGF0YSB8fCB0RGF0YS5tb2RlbHM/W0Btb2RlbF1cclxuXHRcdGlmIG1cclxuXHRcdFx0bW9kZWwuZGF0YSA9IG1cclxuXHRcdFx0bW9kZWwubW9kZWwgPSBub2RlcyA9IG0uZGlyc1tAZGlyZWN0aW9uIHx8IDBdXHJcblx0XHRlbHNlXHJcblx0XHRcdGlmIHR5cGVvZiBAZGlyZWN0aW9uID09ICdudW1iZXInXHJcblx0XHRcdFx0bm9kZXMgPSBtb2RlbC5kYXRhLmRpcnNbQGRpcmVjdGlvbl1cclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHRcdG5vZGVzID0gbW9kZWwubW9kZWxcclxuXHRcdGlmIG5vZGVzXHJcblx0XHRcdCMgU2VsZWN0IG5vZGUgaW4gbW9kZWxcclxuXHRcdFx0bm9kZSA9IEBub2RlXHJcblx0XHRcdGlmIHR5cGVvZiBub2RlID09ICdzdHJpbmcnXHJcblx0XHRcdFx0bm9kZSA9IG5vZGVzW25vZGVdXHJcblx0XHRcdGVsc2VcclxuXHRcdFx0XHRyb290ID0gbm9kZXNcclxuXHRcdFx0XHRmb3IgcGF0aCBpbiBub2RlXHJcblx0XHRcdFx0XHRyb290ID0gcm9vdFtwYXRoXVxyXG5cdFx0XHRcdG5vZGUgPSByb290XHJcblx0XHRcdGlmIG5vZGVcclxuXHRcdFx0XHRnLnRyYW5zbGF0ZSBAeCB8fCAwLCBAeSB8fCAwXHJcblx0XHRcdFx0ZHJhd05vZGUuY2FsbCBub2RlLCBnLCBtb2RlbCwgb3BhY2l0eVxyXG5cdFx0XHRcdCMgUmVjaXZlIG1vZGVsIGRhdGFcclxuXHRcdG1vZGVsLm1vZGVsID0gdE1vZGVsXHJcblx0XHRtb2RlbC5kYXRhID0gdERhdGFcclxuXHRcdHRoaXNcclxuXHJcblx0YXR0YWNoOiAoZywgbW9kZWwsIG9wYWNpdHkpIC0+XHJcblx0XHRkYXRhID0gbW9kZWwuYXR0YWNobWVudFtAYXR0YWNoXVxyXG5cdFx0aWYgZGF0YVxyXG5cdFx0XHRkcmF3VHlwZU9iai5ub2RlLmNhbGwgdGhpcywgZywgbW9kZWwsIG9wYWNpdHksIGRhdGFcclxuXHRcdHRoaXNcclxuXHJcblx0aW1hZ2U6IChnLCBtb2RlbCkgLT5cclxuXHRcdEBub0Nsb3NlID0gQGRyYXcgPSB0cnVlXHJcblx0XHRpbWFnZSA9IG1vZGVsLmRhdGEuaW1hZ2VzW0BpbWFnZV1cclxuXHRcdGlmIEB3aWR0aCB8fCBAaGVpZ2h0XHJcblx0XHRcdGcuZHJhd0ltYWdlIGltYWdlLCBAeCB8fCAwLCBAeSB8fCAwLCBAd2lkdGgsIEBoZWlnaHRcclxuXHRcdGVsc2VcclxuXHRcdFx0Zy5kcmF3SW1hZ2UgaW1hZ2UsIEB4IHx8IDAsIEB5IHx8IDBcclxuXHRcdHRoaXNcclxuXHJcblx0c3ByaXRlOiAoZywgbW9kZWwpIC0+XHJcblx0XHRAbm9DbG9zZSA9IEBkcmF3ID0gdHJ1ZVxyXG5cdFx0c3ByaXRlID0gQHNwcml0ZVxyXG5cdFx0aWYgc3ByaXRlLmNvbnN0cnVjdG9yID09IFN0cmluZ1xyXG5cdFx0XHRAc3ByaXRlID0gc3ByaXRlID0gbW9kZWwuZGF0YS5zcHJpdGVzW3Nwcml0ZV1cclxuXHRcdHNwcml0ZS5kcmF3IGcsIEBmcmFtZSwgQHggfHwgMCwgQHkgfHwgMCwgQGluZGV4XHJcblx0XHR0aGlzXHJcblxyXG5cdHRleHQ6IChnKSAtPlxyXG5cdFx0aWYgQGRyYXcgIT0gdHJ1ZVxyXG5cdFx0XHRAZHJhd1RleHQgPSBAZHJhd1xyXG5cdFx0ZHJhdyA9IEBkcmF3VGV4dFxyXG5cdFx0QG5vQ2xvc2UgPSBAZHJhdyA9IHRydWVcclxuXHRcdCNcclxuXHRcdGlmIEBmb250IHRoZW4gZy5mb250ID0gQGZvbnRcclxuXHRcdGlmIEB0ZXh0QWxpZ24gdGhlbiBnLnRleHRBbGlnbiA9IEB0ZXh0QWxpZ25cclxuXHRcdGlmIEB0ZXh0QmFzZWxpbmUgIT0gbnVsbCB0aGVuIGcudGV4dEJhc2VsaW5lID0gQHRleHRCYXNlbGluZVxyXG5cdFx0aWYgQGRpcmVjdGlvbiB0aGVuIGcuZGlyZWN0aW9uID0gQGRpcmVjdGlvblxyXG5cdFx0I1xyXG5cdFx0aWYgZHJhdyA9PSAnZicgfHwgZHJhdyA9PSAnZiZzJ1xyXG5cdFx0XHRnLmZpbGxUZXh0IEB0ZXh0LCBAeCB8fCAwLCBAeSB8fCAwLCBAbWF4V2lkdGhcclxuXHRcdGlmIGRyYXcgPT0gJ3MnIHx8IGRyYXcgPT0gJ2YmcydcclxuXHRcdFx0Zy5zdHJva2VUZXh0IEB0ZXh0LCBAeCB8fCAwLCBAeSB8fCAwLCBAbWF4V2lkdGhcclxuXHRcdHRoaXNcclxuXHJcbnN0eWxlVHlwZUZ1bmMgPVxyXG5cdGxpbmVhcjogKGcpIC0+XHJcblx0XHRncmFkaWVudCA9IGcuY3JlYXRlTGluZWFyR3JhZGllbnQgQHgwIHx8IDAsIEB5MCB8fCAwLCBAeDEgfHwgMCwgQHkxIHx8IDBcclxuXHRcdGZvciBjb2xvclN0b3AgaW4gQGNvbG9yU3RvcHNcclxuXHRcdFx0Z3JhZGllbnQuYWRkQ29sb3JTdG9wIGNvbG9yU3RvcC5wb3MgfHwgMCwgY29sb3JTdG9wLmNvbG9yXHJcblx0XHRncmFkaWVudFxyXG5cclxuXHRyYWRpYWw6IChnKSAtPlxyXG5cdFx0Z3JhZGllbnQgPSBnLmNyZWF0ZVJhZGlhbEdyYWRpZW50IEB4MCB8fCAwLCBAeTAgfHwgMCwgQHIwIHx8IDAsIEB4MSB8fCAwLCBAeTEgfHwgMCwgQHIxIHx8IDBcclxuXHRcdGZvciBjb2xvclN0b3AgaW4gQGNvbG9yU3RvcHNcclxuXHRcdFx0Z3JhZGllbnQuYWRkQ29sb3JTdG9wIGNvbG9yU3RvcC5wb3MgfHwgMCwgY29sb3JTdG9wLmNvbG9yXHJcblx0XHRncmFkaWVudFxyXG5cclxuXHRwYXR0ZXJuOiAoZywgbW9kZWwpIC0+XHJcblx0XHRpbWFnZSA9IG1vZGVsLmRhdGEuaW1hZ2VzW0BpbWFnZV1cclxuXHRcdGcuY3JlYXRlUGF0dGVybiBpbWFnZSwgQHJlcGV0aXRpb24gfHwgXCJyZXBlYXRcIlxyXG5cclxuaW5pdFN0eWxlID0gKGcsIG1vZGVsLCBzdHlsZSkgLT5cclxuXHRzdHlsZVR5cGVGdW5jW3N0eWxlLnR5cGVdPy5jYWxsIHN0eWxlLCBnLCBtb2RlbFxyXG5cclxuc2V0RHJhd1N0eWxlID0gKGcsIG1vZGVsKSAtPlxyXG5cdHN0cm9rZSA9IEBzdHJva2VcclxuXHRpZiBzdHJva2VcclxuXHRcdGlmIHN0cm9rZS5jb25zdHJ1Y3RvciA9PSBPYmplY3RcclxuXHRcdFx0QHN0cm9rZSA9IGluaXRTdHlsZSBnLCBtb2RlbCwgc3Ryb2tlXHJcblx0XHRnLnN0cm9rZVN0eWxlID0gQHN0cm9rZVxyXG5cdGZpbGwgPSBAZmlsbFxyXG5cdGlmIGZpbGxcclxuXHRcdGlmIGZpbGwuY29uc3RydWN0b3IgPT0gT2JqZWN0XHJcblx0XHRcdEBmaWxsID0gaW5pdFN0eWxlIGcsIG1vZGVsLCBmaWxsXHJcblx0XHRnLmZpbGxTdHlsZSA9IEBmaWxsXHJcblx0aWYgQGxpbmVXaWR0aCAhPSBudWxsIHRoZW4gZy5saW5lV2lkdGggPSBAbGluZVdpZHRoXHJcblx0aWYgQGxpbmVDYXAgIT0gbnVsbCB0aGVuIGcubGluZUNhcCA9IEBsaW5lQ2FwXHJcblx0aWYgQGxpbmVKb2luIHRoZW4gZy5saW5lSm9pbiA9IEBsaW5lSm9pblxyXG5cdGlmIEBsaW5lRGFzaE9mZnNldCAhPSBudWxsIHRoZW4gZy5saW5lRGFzaE9mZnNldCA9IEBsaW5lRGFzaE9mZnNldFxyXG5cdHRoaXNcclxuXHJcbmRyYXdOb2RlID0gKGcsIG1vZGVsLCBvcGFjaXR5KSAtPlxyXG5cdGcuc2F2ZSgpXHJcblx0bW9kZWwuYW5pbWF0aW9uLmFuaW1hdGUgdGhpc1xyXG5cdGcudHJhbnNmb3JtIEBzY2FsZVggfHwgMSwgQHNrZXdZIHx8IDAsIEBza2V3WCB8fCAwLCBAc2NhbGVZIHx8IDEsIEBvcmlnWCB8fCAwLCBAb3JpZ1kgfHwgMFxyXG5cdG1Bc2NhbGUgPSBAbW9kZWxBbmdsZVNjYWxlXHJcblx0aWYgbUFzY2FsZSB0aGVuIGcucm90YXRlIChtb2RlbC5hbmdsZSAqIG1Bc2NhbGUpICogTWF0aC5QSSAvIDE4MFxyXG5cdGlmIEBhbmdsZSB0aGVuIGcucm90YXRlIEBhbmdsZSAqIE1hdGguUEkgLyAxODBcclxuXHRzZXREcmF3U3R5bGUuY2FsbCB0aGlzLCBnLCBtb2RlbFxyXG5cdCMgU2hhZG93c1xyXG5cdGlmIEBub1NoYWRvd1xyXG5cdFx0Zy5zaGFkb3dCbHVyID0gMFxyXG5cdFx0Zy5zaGFkb3dPZmZzZXRYID0gMFxyXG5cdFx0Zy5zaGFkb3dPZmZzZXRZID0gMFxyXG5cdGlmIEBzaGFkb3dCbHVyICE9IG51bGwgdGhlbiBnLnNoYWRvd0JsdXIgPSBAc2hhZG93Qmx1clxyXG5cdGlmIEBzaGFkb3dDb2xvciAhPSBudWxsIHRoZW4gZy5zaGFkb3dDb2xvciA9IEBzaGFkb3dDb2xvclxyXG5cdGlmIEBzaGFkb3dPZmZzZXRYICE9IG51bGwgdGhlbiBnLnNoYWRvd09mZnNldFggPSBAc2hhZG93T2Zmc2V0WFxyXG5cdGlmIEBzaGFkb3dPZmZzZXRZICE9IG51bGwgdGhlbiBnLnNoYWRvd09mZnNldFkgPSBAc2hhZG93T2Zmc2V0WVxyXG5cdGcuZ2xvYmFsQWxwaGEgPSBvcGFjaXR5ICogKGlmIEBvcGFjaXR5ID09IG51bGwgdGhlbiAxIGVsc2UgQG9wYWNpdHkpXHJcblxyXG5cdGlmIEBiZWZvcmVcclxuXHRcdG1vZGVsLmFuaW1hdGlvbi5yZWNpdmVQcm9wcyB0aGlzXHJcblx0XHQjXHJcblx0XHRmb3Iga2V5LCBub2RlIG9mIEBiZWZvcmVcclxuXHRcdFx0aWYgIW5vZGUuaGlkZVxyXG5cdFx0XHRcdGRyYXdOb2RlLmNhbGwgbm9kZSwgZywgbW9kZWwsIG9wYWNpdHlcclxuXHRcdCNcclxuXHRcdG1vZGVsLmFuaW1hdGlvbi5hbmltYXRlIHRoaXNcclxuXHJcblx0Zy5iZWdpblBhdGgoKVxyXG5cdGRyYXdUeXBlT2JqW0B0eXBlXT8uY2FsbCB0aGlzLCBnLCBtb2RlbCwgb3BhY2l0eVxyXG5cdGlmICFAbm9DbG9zZSB0aGVuIGcuY2xvc2VQYXRoKClcclxuXHJcblx0ZHJhdyA9IEBkcmF3IHx8ICdmJnMnXHJcblx0aWYgZHJhdyA9PSAnZicgfHwgZHJhdyA9PSAnZiZzJ1xyXG5cdFx0Zy5maWxsKClcclxuXHRpZiBkcmF3ID09ICdzJyB8fCBkcmF3ID09ICdmJnMnXHJcblx0XHRnLnN0cm9rZSgpXHJcblxyXG5cdGlmIEBjbGlwXHJcblx0XHRnLmNsaXAoKVxyXG5cclxuXHRtb2RlbC5hbmltYXRpb24ucmVjaXZlUHJvcHMgdGhpc1xyXG5cclxuXHRpZiBAYWZ0ZXJcclxuXHRcdGZvciBrZXksIG5vZGUgb2YgQGFmdGVyXHJcblx0XHRcdGlmICFub2RlLmhpZGVcclxuXHRcdFx0XHRkcmF3Tm9kZS5jYWxsIG5vZGUsIGcsIG1vZGVsLCBvcGFjaXR5XHJcblxyXG5cdGcucmVzdG9yZSgpXHJcblx0dGhpc1xyXG5cclxuXHJcbmRyYXdQYXJ0VHlwZSA9XHJcblx0cG9seTogKGcsIHZlcnRzLCBjYW1lcmEsIG1vZGVsKSAtPlxyXG5cdFx0diA9IHZlcnRzW0B2ZXJ0c1swXV1cclxuXHRcdHhjID0gY2FtZXJhLnhcclxuXHRcdHljID0gY2FtZXJhLnlcclxuXHRcdHp0ID0gWl9PUklHSU4gKyBjYW1lcmEuelxyXG5cdFx0eiA9ICgodi56IHx8IDApICsgenQpICogWl9UUkFOU0ZPUk1cclxuXHRcdHggPSAoKHYueCB8fCAwKSArIHhjKSAqIHpcclxuXHRcdHkgPSAoKHYueSB8fCAwKSArIHljKSAqIHpcclxuXHRcdGcubW92ZVRvIHgsIHlcclxuXHRcdGwgPSBAdmVydHMubGVuZ3RoIC0gMVxyXG5cdFx0Zm9yIGkgaW4gWzEuLmxdXHJcblx0XHRcdHYgPSB2ZXJ0c1tAdmVydHNbaV1dO1xyXG5cdFx0XHR6ID0gKCh2LnogfHwgMCkgKyB6dCkgKiBaX1RSQU5TRk9STVxyXG5cdFx0XHR4ID0gKCh2LnggfHwgMCkgKyB4YykgKiB6XHJcblx0XHRcdHkgPSAoKHYueSB8fCAwKSArIHljKSAqIHpcclxuXHRcdFx0Zy5saW5lVG8geCwgeVxyXG5cdFx0dGhpc1xyXG5cclxuXHRwYXJ0OiAoZywgdmVydHMsIGNhbWVyYSwgbW9kZWwsIG9wYWNpdHkpIC0+XHJcblx0XHRAbm9DbG9zZSA9IEBkcmF3ID0gdHJ1ZVxyXG5cdFx0IyBTYXZlIG1vZGVsIGRhdGFcclxuXHRcdHREYXRhID0gbW9kZWwuZGF0YVxyXG5cdFx0IyBTZWxlY3QgbW9kZWxcclxuXHRcdG0gPSB0RGF0YS5tb2RlbHM/W0Btb2RlbF1cclxuXHRcdGlmIG1cclxuXHRcdFx0bW9kZWwuZGF0YSA9IG1cclxuXHRcdFx0cGFydHMgPSBtLmRpcnNQYXJ0c1tAZGlyZWN0aW9uIHx8IDBdXHJcblx0XHRlbHNlXHJcblx0XHRcdHBhcnRzID0gbW9kZWwucGFydHNcclxuXHRcdGlmIHBhcnRzXHJcblx0XHRcdHYgPSB2ZXJ0c1tAdmVydF1cclxuXHRcdFx0YyA9XHJcblx0XHRcdFx0eDogY2FtZXJhLnggKyAodi54IHx8IDApXHJcblx0XHRcdFx0eTogY2FtZXJhLnkgKyAodi55IHx8IDApXHJcblx0XHRcdFx0ejogY2FtZXJhLnogKyAodi56IHx8IDApXHJcblxyXG5cdFx0XHRwYXJ0ID0gcGFydHNbQHBhcnRdXHJcblx0XHRcdGlmIHBhcnRcclxuXHRcdFx0XHR0UGFydHMgPSBtb2RlbC5wYXJ0c1xyXG5cdFx0XHRcdG1vZGVsLnBhcnRzID0gcGFydHNcclxuXHRcdFx0XHRmb3IgZmFjZSBpbiBwYXJ0LmZhY2VzXHJcblx0XHRcdFx0XHRkcmF3UGFydC5jYWxsIGZhY2UsIGcsIG1vZGVsLCBjLCBvcGFjaXR5XHJcblx0XHRcdFx0bW9kZWwucGFydHMgPSB0UGFydHNcclxuXHRcdG1vZGVsLmRhdGEgPSB0RGF0YVxyXG5cdFx0dGhpc1xyXG5cclxuXHRub2RlOiAoZywgdmVydHMsIGNhbWVyYSwgbW9kZWwsIG9wYWNpdHkpIC0+XHJcblx0XHR0cmFuc2Zvcm1WZXJ0IHZlcnRzW0B2ZXJ0XSwgY2FtZXJhXHJcblx0XHRcdC5hcHBseSBnXHJcblx0XHRkcmF3VHlwZU9iai5ub2RlLmNhbGwgdGhpcywgZywgbW9kZWwsIG9wYWNpdHlcclxuXHRcdHRoaXNcclxuXHJcblx0YXR0YWNoOiAoZywgbW9kZWwsIG9wYWNpdHkpIC0+XHJcblx0XHR0cmFuc2Zvcm1WZXJ0IHZlcnRzW0B2ZXJ0XSwgY2FtZXJhXHJcblx0XHRcdC5hcHBseSBnXHJcblx0XHRkYXRhID0gbW9kZWwuYXR0YWNobWVudFtAYXR0YWNoXVxyXG5cdFx0aWYgZGF0YVxyXG5cdFx0XHRkcmF3VHlwZU9iai5ub2RlLmNhbGwgdGhpcywgZywgbW9kZWwsIG9wYWNpdHksIGRhdGFcclxuXHRcdHRoaXNcclxuXHJcblx0ZWxpcHNlOiAoZywgdmVydHMsIGNhbWVyYSkgLT5cclxuXHRcdHYgPSB0cmFuc2Zvcm1WZXJ0IHZlcnRzW0B2ZXJ0MV0sIGNhbWVyYVxyXG5cdFx0eDEgPSB2LnhcclxuXHRcdHkxID0gdi55XHJcblx0XHR2ID0gdHJhbnNmb3JtVmVydCB2ZXJ0c1tAdmVydDJdLCBjYW1lcmFcclxuXHRcdHgyID0gdi54XHJcblx0XHR5MiA9IHYueVxyXG5cdFx0cnggPSAoeDIgLSB4MSkgLyAyXHJcblx0XHRyeSA9ICh5MiAtIHkxKSAvIDJcclxuXHRcdGcuZWxsaXBzZShcclxuXHRcdFx0eDEgKyByeCxcclxuXHRcdFx0eTEgKyByeSxcclxuXHRcdFx0cngsXHJcblx0XHRcdHJ5LFxyXG5cdFx0XHQoQHJvdGF0aW9uIHx8IDApICogTWF0aC5QSSAvIDE4MCxcclxuXHRcdFx0KEBzdGFydEFuZ2xlIHx8IDApICogTWF0aC5QSSAvIDE4MCxcclxuXHRcdFx0KEBlbmRBbmdsZSB8fCAzNjApICogTWF0aC5QSSAvIDE4MCxcclxuXHRcdFx0aWYgQGNsb2Nrd2lzZSB0aGVuIGZhbHNlIGVsc2UgdHJ1ZSlcclxuXHRcdHRoaXNcclxuXHJcblxyXG5kcmF3UGFydCA9IChnLCBtb2RlbCwgY2FtZXJhLCBvcGFjaXR5KSAtPlxyXG5cdGcuc2F2ZSgpXHJcblx0c3Ryb2tlID0gQHN0cm9rZVxyXG5cdHNldERyYXdTdHlsZS5jYWxsIHRoaXMsIGcsIG1vZGVsXHJcblx0Zy5nbG9iYWxBbHBoYSA9IG9wYWNpdHkgKiAoaWYgQG9wYWNpdHkgPT0gbnVsbCB0aGVuIDEgZWxzZSBAb3BhY2l0eSlcclxuXHJcblx0Zy5iZWdpblBhdGgoKVxyXG5cdGRyYXdQYXJ0VHlwZVtAdHlwZSB8fCAncG9seSddPy5jYWxsIHRoaXMsIGcsIG1vZGVsLmRhdGEudmVydHMsIGNhbWVyYSwgbW9kZWwsIG9wYWNpdHlcclxuXHRpZiAhQG5vQ2xvc2UgdGhlbiBnLmNsb3NlUGF0aCgpXHJcblxyXG5cdGRyYXcgPSBAZHJhdyB8fCAnZiZzJ1xyXG5cdGlmIGRyYXcgPT0gJ2YnIHx8IGRyYXcgPT0gJ2YmcydcclxuXHRcdGcuZmlsbCgpXHJcblx0aWYgZHJhdyA9PSAncycgfHwgZHJhdyA9PSAnZiZzJ1xyXG5cdFx0Zy5zdHJva2UoKVxyXG5cclxuXHRnLnJlc3RvcmUoKVxyXG5cdHRoaXNcclxuXHJcblpfVFJBTlNGT1JNID0gMC4wMDAyXHJcblpfT1JJR0lOID0gMSAvIFpfVFJBTlNGT1JNXHJcblxyXG50cnNmT2JqID1cclxuXHR4OiAwXHJcblx0eTogMFxyXG5cdHNjYWxlOiAxXHJcblx0YXBwbHk6IChnKSAtPlxyXG5cdFx0Zy50cmFuc2Zvcm0gQHNjYWxlLCAwLCAwLCBAc2NhbGUsIEB4LCBAeVxyXG5cclxuXHJcblxyXG5jbGFzcyBNb2RlbFxyXG5cdEB0cmFuc2Zvcm06ICh4LCB5LCB6LCBjYW1lcmEpIC0+XHJcblx0XHR6ID0gKFpfT1JJR0lOICsgeiArIGNhbWVyYS56KSAqIFpfVFJBTlNGT1JNXHJcblx0XHR0cnNmT2JqLnggPSAoeCArIGNhbWVyYS54KSAqIHpcclxuXHRcdHRyc2ZPYmoueSA9ICh5ICsgY2FtZXJhLnkpICogelxyXG5cdFx0dHJzZk9iai5zY2FsZSA9IHpcclxuXHRcdHRyc2ZPYmpcclxuXHJcblx0YXR0YWNobWVudDogW11cclxuXHRhbmltYXRpb246IG5ldyBBbmltYXRpb25cclxuXHRhbmdsZTogMFxyXG5cclxuXHRjb25zdHJ1Y3RvcjogKEBkYXRhKSAtPlxyXG5cclxuXHRzZXREYXRhOiAoQGRhdGEpIC0+XHJcblx0XHRAc2V0QW5nbGUgQGFuZ2xlXHJcblxyXG5cdHNldEFuZ2xlOiAoYW5nbGUpIC0+XHJcblx0XHRAYW5nbGUgPSBhbmdsZSA9IGFuZ2xlICUgMzYwXHJcblx0XHRAYW5pbWF0aW9uLnNldEFuZ2xlIGFuZ2xlXHJcblx0XHRkaXJzID0gQGRhdGEuZGlyc1xyXG5cdFx0aWYgZGlyc1xyXG5cdFx0XHRuID0gZGlycy5sZW5ndGhcclxuXHRcdFx0aWYgbiA+IDFcclxuXHRcdFx0XHRkQW5nbGUgPSAzNjAgLyBuXHJcblx0XHRcdFx0IyBhbmdsZSArPSBkQW5nbGUgLyAyXHJcblx0XHRcdFx0aWYgYW5nbGUgPCAwIHRoZW4gYW5nbGUgKz0gMzYwXHJcblx0XHRcdFx0QG1vZGVsID0gZGlyc1tNYXRoLmZsb29yKGFuZ2xlIC8gZEFuZ2xlKV1cclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHRcdEBtb2RlbCA9IGRpcnNbMF1cclxuXHRcdGVsc2VcclxuXHRcdFx0QG1vZGVsID0gbnVsbFxyXG5cclxuXHRcdHBhcnRzID0gQGRhdGEuZGlyc1BhcnRzXHJcblx0XHRpZiBwYXJ0c1xyXG5cdFx0XHRuID0gcGFydHMubGVuZ3RoXHJcblx0XHRcdGlmIG4gPiAxXHJcblx0XHRcdFx0ZEFuZ2xlID0gMzYwIC8gblxyXG5cdFx0XHRcdCMgYW5nbGUgKz0gZEFuZ2xlIC8gMlxyXG5cdFx0XHRcdGlmIGFuZ2xlIDwgMCB0aGVuIGFuZ2xlICs9IDM2MFxyXG5cdFx0XHRcdEBwYXJ0cyA9IHBhcnRzW01hdGguZmxvb3IoYW5nbGUgLyBkQW5nbGUpXVxyXG5cdFx0XHRlbHNlXHJcblx0XHRcdFx0QHBhcnRzID0gcGFydHNbMF1cclxuXHRcdGVsc2VcclxuXHRcdFx0QHBhcnRzID0gbnVsbFxyXG5cclxuXHRkcmF3MkQ6IChnLCBvcGFjaXR5ID0gMSkgLT5cclxuXHRcdGlmIEBtb2RlbFxyXG5cdFx0XHRmb3Iga2V5LCBub2RlIG9mIEBtb2RlbFxyXG5cdFx0XHRcdGlmICFub2RlLmhpZGVcclxuXHRcdFx0XHRcdGRyYXdOb2RlLmNhbGwgbm9kZSwgZywgdGhpcywgb3BhY2l0eVxyXG5cclxuXHRkcmF3Tm9kZTogKGcsIG5vZGUsIG9wYWNpdHkgPSAxKSAtPlxyXG5cdFx0aWYgQG1vZGVsXHJcblx0XHRcdG5vZGUgPSBAbW9kZWxbbm9kZV1cclxuXHRcdFx0aWYgbm9kZVxyXG5cdFx0XHRcdGRyYXdOb2RlLmNhbGwgbm9kZSwgZywgdGhpcywgb3BhY2l0eVxyXG5cclxuXHRkcmF3UGFydDogKGcsIHBhcnQsIGNhbWVyYSwgb3BhY2l0eSA9IDEpIC0+XHJcblx0XHRmb3IgZmFjZSBpbiBwYXJ0LmZhY2VzXHJcblx0XHRcdGRyYXdQYXJ0LmNhbGwgZmFjZSwgZywgdGhpcywgY2FtZXJhLCBvcGFjaXR5XHJcblxyXG5cdGRyYXdQYXJ0czogKGcsIGNhbWVyYSwgb3BhY2l0eSA9IDEpIC0+XHJcblx0XHRpZiBAcGFydHNcclxuXHRcdFx0Zm9yIF8sIHBhcnQgb2YgQHBhcnRzXHJcblx0XHRcdFx0aWYgIXBhcnQuaGlkZVxyXG5cdFx0XHRcdFx0Zm9yIGZhY2UgaW4gcGFydC5mYWNlc1xyXG5cdFx0XHRcdFx0XHRkcmF3UGFydC5jYWxsIGZhY2UsIGcsIHRoaXMsIGNhbWVyYSwgb3BhY2l0eVxyXG5cclxudHJhbnNmb3JtID0gTW9kZWwudHJhbnNmb3JtXHJcblxyXG50cmFuc2Zvcm1WZXJ0ID0gKHYsIGNhbWVyYSkgLT5cclxuXHR0cmFuc2Zvcm0gdi54IHx8IDAsIHYueSB8fCAwLCB2LnogfHwgMCwgY2FtZXJhXHJcblxyXG5leHBvcnQgeyBNb2RlbERhdGEsIE1vZGVsIH0iLCJjbGFzcyBFdmVudEVtbWl0ZXJcclxuXHRoYW5kbGVyczogW11cclxuXHJcblx0b246IChldmVudCwgY2FsbGJhY2spIC0+XHJcblx0XHRpZiBjYWxsYmFja1xyXG5cdFx0XHRoYW5kbGVyID0gQGhhbmRsZXJzW2V2ZW50XVxyXG5cdFx0XHRpZiAhaGFuZGxlclxyXG5cdFx0XHRcdEBoYW5kbGVyc1tldmVudF0gPSBoYW5kbGVyID0gW11cclxuXHRcdFx0aWYgaGFuZGxlci5pbmRleE9mKGNhbGxiYWNrKSA8IDBcclxuXHRcdFx0XHRoYW5kbGVyLnB1c2ggY2FsbGJhY2tcclxuXHRcdHRoaXNcclxuXHJcblx0b2ZmOiAoZXZlbnQsIGNhbGxiYWNrKSAtPlxyXG5cdFx0aWYgY2FsbGJhY2tcclxuXHRcdFx0aGFuZGxlciA9IEBoYW5kbGVyc1tldmVudF1cclxuXHRcdFx0aWYgaGFuZGxlclxyXG5cdFx0XHRcdGluZGV4ID0gaGFuZGxlci5pbmRleE9mIGNhbGxiYWNrXHJcblx0XHRcdFx0aWYgaW5kZXggPj0gMFxyXG5cdFx0XHRcdFx0aGFuZGxlci5zcGxpY2UgaW5kZXgsIDFcclxuXHRcdHRoaXNcclxuXHJcblx0dHJpZ2dlcjogKGV2ZW50LCBhcmdzKSAtPlxyXG5cdFx0aGFuZGxlciA9IEBoYW5kbGVyc1tldmVudF1cclxuXHRcdGlmIGhhbmRsZXJcclxuXHRcdFx0Zm9yIGNhbGxiYWNrIGluIGhhbmRsZXJcclxuXHRcdFx0XHRjYWxsYmFjay5hcHBseSB0aGlzLCBhcmdzXHJcblx0XHR0aGlzXHJcblxyXG5cdHJlbW92ZUV2ZW50OiAoZXZlbnQpIC0+XHJcblx0XHRkZWxldGUgQGhhbmRsZXJzW2V2ZW50XVxyXG5cdFx0dGhpc1xyXG5cclxuZXhwb3J0IHsgRXZlbnRFbW1pdGVyIH0iLCJpbXBvcnQgeyBFdmVudEVtbWl0ZXIgfSBmcm9tICcuL2V2ZW50cydcclxuXHJcbiMgRXZlbnRzOlxyXG4jICdjaGFuZ2VwZXJjZW50JyB0cmlnZ2VyIHdoZW4gc29tZSByZXNvcmNlcyBsb2FkZWRcclxuIyAnbG9hZCcgdHJpZ2dlciB3aGVuIGFsbCByZXNvcmNlcyBsb2FkZWRcclxuXHJcbmNsYXNzIExvYWRlciBleHRlbmRzIEV2ZW50RW1taXRlclxyXG5cdGxvYWRSZXNOdW1iZXIgPSAwXHJcblx0YWxsUmVzTG9hZGVyID0gMFxyXG5cclxuXHRyZXNldDogKCkgLT5cclxuXHRcdGxvYWRSZXNOdW1iZXIgPSBhbGxSZXNMb2FkZXIgPSAwXHJcblxyXG5cdGdldFBlcmNlbnQ6IC0+XHJcblx0XHQxIC0gaWYgYWxsUmVzTG9hZGVyICE9IDAgdGhlbiBsb2FkUmVzTnVtYmVyIC8gYWxsUmVzTG9hZGVyIGVsc2UgMFxyXG5cclxuXHR1cGRhdGVQZXJjZW50OiAoKSAtPlxyXG5cdFx0QHRyaWdnZXIgJ2NoYW5nZXBlcmNlbnQnLCBbIEBnZXRQZXJjZW50KCkgXVxyXG5cclxuXHRsb2FkOiAoY2FsbGJhY2spIC0+XHJcblx0XHRfdGhpcyA9IHRoaXNcclxuXHRcdGxvYWRSZXNOdW1iZXIrK1xyXG5cdFx0YWxsUmVzTG9hZGVyKytcclxuXHRcdCMgQHVwZGF0ZVBlcmNlbnQoKVxyXG5cdFx0LT5cclxuXHRcdFx0Y2FsbGJhY2s/LmFwcGx5IF90aGlzLCBhcmd1bWVudHNcclxuXHRcdFx0bG9hZFJlc051bWJlci0tXHJcblx0XHRcdGlmIGxvYWRSZXNOdW1iZXIgPD0gMFxyXG5cdFx0XHRcdF90aGlzLnJlc2V0KClcclxuXHRcdFx0XHRfdGhpcy50cmlnZ2VyICdsb2FkJ1xyXG5cdFx0XHRfdGhpcy51cGRhdGVQZXJjZW50KClcclxuXHJcblx0bG9hZEpzb246IChmaWxlLCBjYWxsYmFjaykgLT5cclxuXHRcdGNhbGxiYWNrID0gQGxvYWQgY2FsbGJhY2tcclxuXHRcdCQuZ2V0SlNPTiBmaWxlICsgJy5qc29uJ1xyXG5cdFx0XHQuZG9uZSBjYWxsYmFja1xyXG5cdFx0XHQuZmFpbCAtPlxyXG5cdFx0XHRcdGNhbGxiYWNrIG51bGxcclxuXHJcblx0bG9hZEltYWdlOiAoZmlsZSwgY2FsbGJhY2spIC0+XHJcblx0XHRjYWxsYmFjayA9IEBsb2FkIGNhbGxiYWNrXHJcblx0XHRpbWcgPSBuZXcgSW1hZ2VcclxuXHRcdGltZy5vbmxvYWQgPSAtPlxyXG5cdFx0XHRjYWxsYmFjayBpbWdcclxuXHRcdGltZy5zcmMgPSBmaWxlXHJcblx0XHRpbWdcclxuXHJcbmV4cG9ydCB7IExvYWRlciB9IiwiaW1wb3J0IHsgTW9kZWxEYXRhLCBNb2RlbCB9IGZyb20gJy4vbW9kZWwnXG5pbXBvcnQgeyBBbmltYXRpb25EYXRhIH0gZnJvbSAnLi9hbmltYXRpb24nXG5pbXBvcnQgeyBMb2FkZXIgfSBmcm9tICcuL2xvYWRlcidcblxuJChkb2N1bWVudCkucmVhZHkgLT5cblx0JGNhbnZhcyA9ICQgJyNjYW52YXMnXG5cdGNhbnZhcyA9ICRjYW52YXMuZ2V0IDBcblx0Y29udGV4dCA9IGNhbnZhcy5nZXRDb250ZXh0ICcyZCcsIGFscGhhOiBmYWxzZVxuXG5cdG1vZGVsRmlsZSA9ICdtb2RlbHMvYXJlbmEnXG5cdGxvYWRlciA9IG5ldyBMb2FkZXJcblx0bW9kZWwgPSBuZXcgTW9kZWxcblx0bW9kZWxEYXRhID0gbmV3IE1vZGVsRGF0YVxuXHRhbmltYXRpb25GcmFtZSA9IG51bGxcblx0Y2FtZXJhID1cblx0XHRjYW52YXM6IGNhbnZhc1xuXHRcdGc6IGNvbnRleHRcblx0XHR4OiAwXG5cdFx0eTogMFxuXHRcdHo6IDBcblxuXHRyZXNpemUgPSAtPlxuXHRcdGNhbnZhcy53aWR0aCA9ICQod2luZG93KS53aWR0aCgpXG5cdFx0Y2FudmFzLmhlaWdodCA9ICQod2luZG93KS5oZWlnaHQoKVxuXG5cdHJlc2l6ZSgpXG5cblx0JCh3aW5kb3cpLm9uICdyZXNpemUnLCByZXNpemVcblxuXHRtb2RlbFJlZnJlc2ggPSAtPlxuI1x0XHRmb3Iga2V5LCBfIG9mIG1vZGVsRGF0YVxuI1x0XHRcdGRlbGV0ZSBtb2RlbERhdGFba2V5XVxuXHRcdG1vZGVsRGF0YS5sb2FkIGxvYWRlciwgbW9kZWxGaWxlXG5cdFxuXHRsb2FkZXIub24gJ2xvYWQnLCAtPlxuXHRcdG1vZGVsLnNldERhdGEgbW9kZWxEYXRhXG5cdFx0aWYgbW9kZWwuYW5pbWF0aW9uLmRhdGFcblx0XHRcdCMgbW9kZWwuYW5pbWF0aW9uLnNldEFuaW0gJ3Rlc3QnLCAwXG5cdFx0XHQjXG5cdFx0XHRtb2RlbC5hbmltYXRpb24uc2V0QW5pbSBhbmltYXRpb25GcmFtZSwgbW9kZWwuYW5nbGVcblxuXHRtb2RlbFJlZnJlc2goKVxuXG5cdHJlbmRlciA9IChkZWx0YSkgLT5cblx0XHRjb250ZXh0LnNhdmUoKVxuXHRcdHcgPSBjYW52YXMud2lkdGhcblx0XHRoID0gY2FudmFzLmhlaWdodFxuXHRcdGN4ID0gdyAvIDJcblx0XHRjeSA9IDBcblx0XHRjb250ZXh0LmZpbGxTdHlsZSA9ICcjZmZmJ1xuXHRcdGNvbnRleHQuZmlsbFJlY3QgMCwgMCwgdywgaFxuXHRcdGNvbnRleHQuYmVnaW5QYXRoKClcblx0XHRjb250ZXh0LmxpbmVXaWR0aCA9IDJcblx0XHRjb250ZXh0LnN0cm9rZVN0eWxlID0gJyNmMDAnXG5cdFx0Y29udGV4dC5tb3ZlVG8gY3gsIDBcblx0XHRjb250ZXh0LmxpbmVUbyBjeCwgaFxuXHRcdGNvbnRleHQubW92ZVRvIDAsIGN5XG5cdFx0Y29udGV4dC5saW5lVG8gdywgY3lcblx0XHRjb250ZXh0LnN0cm9rZSgpXG5cblx0XHRjb250ZXh0LnRyYW5zbGF0ZSBjeCwgY3lcblxuXHRcdG1vZGVsLmFuaW1hdGlvbi5wbGF5KClcblxuXHRcdG1vZGVsLmRyYXdQYXJ0cyBjb250ZXh0LCBjYW1lcmFcblxuXHRcdE1vZGVsLnRyYW5zZm9ybSgwLCAwLCAwLCBjYW1lcmEpXG5cdFx0XHQuYXBwbHkgY29udGV4dFxuXG5cdFx0bW9kZWwuZHJhdzJEIGNvbnRleHRcblxuXHRcdGNvbnRleHQucmVzdG9yZSgpXG5cdFx0IyBcblx0XHR3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lIHJlbmRlclxuXG5cdHJlbmRlcigwKVxuXG5cdG9sZE1vdXNlWCA9IG9sZE1vdXNlWSA9MFxuXHRtb3ZlQ2FtZXJhID0gKGUpIC0+XG5cdFx0Y2FtZXJhLnggKz0gZS5jbGllbnRYIC0gb2xkTW91c2VYXG5cdFx0Y2FtZXJhLnkgKz0gZS5jbGllbnRZIC0gb2xkTW91c2VZXG5cdFx0b2xkTW91c2VYID0gZS5jbGllbnRYXG5cdFx0b2xkTW91c2VZID0gZS5jbGllbnRZXG5cblx0JGNhbnZhcy5vbiAnbW91c2Vkb3duJywgKGUpIC0+XG5cdFx0b2xkTW91c2VYID0gZS5jbGllbnRYXG5cdFx0b2xkTW91c2VZID0gZS5jbGllbnRZXG5cdFx0JGNhbnZhcy5vbiAnbW91c2Vtb3ZlJywgbW92ZUNhbWVyYVxuXG5cdCRjYW52YXMub24gJ3RvdWNoc3RhcnQnLCAoZSkgLT5cblx0XHRvbGRNb3VzZVggPSBlLnRvdWNoZXNbMF0uY2xpZW50WFxuXHRcdG9sZE1vdXNlWSA9IGUudG91Y2hlc1swXS5jbGllbnRZXG5cblx0JGNhbnZhcy5vbiAndG91Y2htb3ZlJywgKGUpIC0+XG5cdFx0bW92ZUNhbWVyYSBlLnRvdWNoZXNbMF1cblxuXHQkY2FudmFzLm9uICdtb3VzZXVwJywgLT5cblx0XHQkY2FudmFzLm9mZiAnbW91c2Vtb3ZlJywgbW92ZUNhbWVyYVxuXG5cdGxhdW5jaEZ1bGxTY3JlZW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XG5cblx0bGF1bmNoRnVsbFNjcmVlbiA9IChlbGVtZW50KSAtPlxuXHRcdGlmIGVsZW1lbnQucmVxdWVzdEZ1bGxTY3JlZW5cblx0XHRcdGVsZW1lbnQucmVxdWVzdEZ1bGxTY3JlZW4oKVxuXHRcdGVsc2UgaWYgZWxlbWVudC5tb3pSZXF1ZXN0RnVsbFNjcmVlblxuXHRcdFx0ZWxlbWVudC5tb3pSZXF1ZXN0RnVsbFNjcmVlbigpXG5cdFx0ZWxzZSBpZiBlbGVtZW50LndlYmtpdFJlcXVlc3RGdWxsU2NyZWVuXG5cdFx0XHRlbGVtZW50LndlYmtpdFJlcXVlc3RGdWxsU2NyZWVuKClcblxuXHRjYW5jZWxGdWxsc2NyZWVuID0gLT5cblx0XHRpZiBkb2N1bWVudC5jYW5jZWxGdWxsU2NyZWVuXG5cdFx0XHRkb2N1bWVudC5jYW5jZWxGdWxsU2NyZWVuKClcblx0XHRlbHNlIGlmIGRvY3VtZW50Lm1vekNhbmNlbEZ1bGxTY3JlZW5cblx0XHRcdGRvY3VtZW50Lm1vekNhbmNlbEZ1bGxTY3JlZW4oKVxuXHRcdGVsc2UgaWYgZG9jdW1lbnQud2Via2l0Q2FuY2VsRnVsbFNjcmVlblxuXHRcdFx0ZG9jdW1lbnQud2Via2l0Q2FuY2VsRnVsbFNjcmVlbigpIl19
