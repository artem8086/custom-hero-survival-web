"use strict";!function(){var t,e,s,i,r,n,a,h,o,l,u,c,d,f,p,m,v,g,w,y,x,P,b,O,z,T,k,A,I,C,M,S;t=class{constructor(){this.handlers=[]}on(t,e){var s;return e&&((s=this.handlers[t])||(this.handlers[t]=s=[]),s.indexOf(e)<0&&s.push(e)),this}off(t,e){var s,i;return e&&(s=this.handlers[t])&&(i=s.indexOf(e))>=0&&s.splice(i,1),this}trigger(t,e){var s,i,r;if(s=this.handlers[t])for(i=0,r=s.length;i<r;i++)s[i].apply(this,e);return this}removeEvent(t){return delete this.handlers[t],this}},e=function(){class t{static load(e,s){var i;return(i=t.cache[s])||((i=new t).load(e,s),t.cache[s]=i),i}load(t,e){return t.loadJson(e,t=>{this.data=t}),t.loadImage(e+".png",t=>{this.texture=t})}draw(t,e,s,i,r=0){var n;if(n=this.data)switch(e.constructor){case Object:t.drawImage(this.texture,e.x,e.y,e.w,e.h,s+e.cx,i+e.cy,e.w,e.h);break;case Array:this.draw(t,e[Math.floor(r)%e.lenght],s,i);break;case String:this.draw(t,n[e],s,i,r)}return this}}return t.cache=[],t}.call(void 0),function(){class t{static load(e,s){var i;return(i=t.cache[s])||((i=new t).load(e,s),t.cache[s]=i),i}load(t,e){return t.loadJson(e,t=>{var e,s,i;if(t){for(e in s=[],t)i=t[e],s.push(this[e]=i);return s}})}}return t.cache=[],t}.call(void 0),i=function(){return(new Date).getTime()/1e3},n=function(t){return function(e){return 1-t(1-e)}},r=function(t){return function(e){return e<.5?t(2*e)/2:(2-t(2*(1-e)))/2}},a=function(t,e){return h[t]=e,h[t+"EaseOut"]=n(e),h[t+"EaseInOut"]=r(e)},h={linear:function(t){return t},easeOut:function(t){return 1-t},easeInOut:function(t){return t<.5?2*t:2-2*t}},a("quad",(function(t){return t*t})),a("circle",(function(t){return 1-Math.sin(Math.acos(t))})),a("bounce",(function(t){var e,s;for(e=0,s=1;;){if(t>=(7-4*e)/11)return-Math.pow((11-6*e-11*t)/4,2)+Math.pow(s,2);e+=s,s/=2}})),s=function(){class t{reset(){return this.startTime=i(),this.deltaTime=0,this}setAnim(t,e=0,s=this.data){return this.anim=null!=s?s[t]:void 0,this.reset(),this.anim&&(this.duration=this.anim?this.anim.duration:0,this.setAngle(e)),this}setAngle(t){var e,s,i;return this.frame=null,this.anim&&(t%=360,(s=this.anim.dirs)&&((i=s.lenght)>1?(e=360/i,t<0&&(t+=360),this.frame=s[Math.floor(t/e)]):this.frame=s[0])),this}play(t){var e,s;if(t=t||i(),this.deltaTime=e=(t-this.startTime)*this.scale,!(s=this.duration))return!1;if(e>s){if(!this.loop)return!1;this.deltaTime%=s}return!0}animate(e,s=e.nodePath,i=e.nodeName){var r,n,a,o,l,u,c,d,f,p,m,v,g,w,y;if((n=this.frame)&&(w=n[s]||n[i]))for(r=this.deltaTime,d=t.props,f=t.propsUsed,a=0,o=w.length;a<o;a++)if(r>=(u=w[a]).end)for(l in p=u.to)y=p[l],f[l]||(d[l]=e[l],f[l]=!0),e[l]=y;else if(r>=u.start)for(l in v=u.func?h[u.func]:h.linear,m=u.to)y=m[l],c=e[l],f[l]||(d[l]=c,f[l]=!0),c||(c=0),y.constructor===Number?(g=v((r-u.start)/(u.end-u.start)),e[l]=(y-c)*g+c):e[l]=y;return this}reciveProps(e){var s,i,r;for(s in i=t.props,r=t.propsUsed)r[s]&&(e[s]=i[s],delete r[s]);return this}createWorkFrame(){return this.loop=!1,this.frame={work:[{start:0,end:0,to:{}}]},this}resetWork(){var e,s;for(e in s=t.propsUsed)s[e]&&(s[e]=!1);return this}clearWork(){var t,e,s;return(t=this.frame.work[0]).start=t.end=0,s=function(){var t;for(e in t=[],s)s[e],t.push(delete s[e]);return t}(),this}animateProps(t,e,s){var i,r,n,a;for(r in this.duration=e,(i=this.frame.work[0]).end=e,i.func=s,a=i.to,t)n=t[r],a[r]=n;return this.reset(),this}}return t.getTime=i,t.prototype.loop=!0,t.prototype.startTime=0,t.prototype.duration=0,t.prototype.deltaTime=0,t.prototype.scale=1,t.props=[],t.propsUsed=[],t}.call(void 0),l=function(){class t{static load(e,s){var i;return(i=t.cache[s])||((i=new t).load(e,s),t.cache[s]=i),i}load(s,i){return s.loadJson(i,i=>{var r,n,a,h,o,l,u,c,d,f,p,m,v,g;if(i){for(h in i)g=i[h],this[h]=g;if(this.images)for(h in n=this.images,this.images=[],n)r=n[h],this.images[h]=s.loadImage(r);if(this.sprites)for(h in v=this.sprites,this.sprites=[],v)m=v[h],this.sprites[h]=e.load(s,m);if(this.models)for(h in u=this.models,this.models=[],u)l=u[h],this.models[h]=t.load(s,l);if(d=function(t,e=""){var s,i,r;for(s in r=[],t)(i=t[s]).nodePath=e+s,i.nodeName="@"+s,i.before&&d(i.before,i.nodePath+"<"),i.after?r.push(d(i.after,i.nodePath+">")):r.push(void 0);return r},this.dirs){for(p=[],a=0,o=(f=this.dirs).length;a<o;a++)c=f[a],p.push(d(c));return p}}})}}return t.cache=[],t}.call(void 0),m={line:function(t){return t.moveTo(this.x1||0,this.y1||0),t.lineTo(this.x2||0,this.y2||0),this},rect:function(t){return t.rect(this.x||0,this.y||0,this.width||1,this.height||1),this},rectRound:function(t){var e,s,i,r,n;return this.noClose=!1,r=this.x||0,n=this.y||0,i=this.width,e=this.height,i<2*(s=this.radius)&&(s=i/2),e<2*s&&(s=e/2),t.moveTo(r+s,n),t.arcTo(r+i,n,r+i,n+e,s),t.arcTo(r+i,n+e,r,n+e,s),t.arcTo(r,n+e,r,n,s),t.arcTo(r,n,r+i,n,s),this},arc:function(t){return t.arc(this.x||0,this.y||0,this.radius,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise),this},elipse:function(t){return t.ellipse(this.x||0,this.y||0,this.rx,this.ry,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise),this},path:function(t){var e,s,i;return s=this.x||0,i=this.y||0,"string"==typeof this.path&&(this.path=new Path2D(this.path)),this.noClose=!0,t.translate(s,i),"f"!==(e=this.draw||"f&s")&&"f&s"!==e||t.fill(this.path),"s"!==e&&"f&s"!==e||t.stroke(this.path),this},node:function(t,e,s,i){var r,n,a,h,o,l,u,c,f;if(this.noClose=this.draw=!0,c=e.data,f=e.model,(a=i||(null!=(l=c.models)?l[this.model]:void 0))?(e.data=a,e.model=o=a.dirs[this.direction||0]):o="number"==typeof this.direction?e.data.dirs[this.direction]:e.model,o){if("string"==typeof(h=this.node))h=o[h];else{for(u=o,r=0,n=h.length;r<n;r++)u=u[h[r]];h=u}h&&(t.translate(this.x||0,this.y||0),d.call(h,t,e,s))}return e.model=f,e.data=c,this},attach:function(t,e,s){var i;return(i=e.attachment[this.attach])&&m.node.call(this,t,e,s,i),this},image:function(t,e){var s;return this.noClose=this.draw=!0,s=e.data.images[this.image],this.width||this.height?t.drawImage(s,this.x||0,this.y||0,this.width,this.height):t.drawImage(s,this.x||0,this.y||0),this},sprite:function(t,e){var s;return this.noClose=this.draw=!0,(s=this.sprite).constructor===String&&(this.sprite=s=e.data.sprites[s]),s.draw(t,this.frame,this.x||0,this.y||0,this.index),this},text:function(t){var e;return!0!==this.draw&&(this.drawText=this.draw),e=this.drawText,this.noClose=this.draw=!0,this.font&&(t.font=this.font),this.textAlign&&(t.textAlign=this.textAlign),null!==this.textBaseline&&(t.textBaseline=this.textBaseline),this.direction&&(t.direction=this.direction),"f"!==e&&"f&s"!==e||t.fillText(this.text,this.x||0,this.y||0,this.maxWidth),"s"!==e&&"f&s"!==e||t.strokeText(this.text,this.x||0,this.y||0,this.maxWidth),this}},w={linear:function(t){var e,s,i,r,n;for(s=t.createLinearGradient(this.x0||0,this.y0||0,this.x1||0,this.y1||0),i=0,r=(n=this.colorStops).length;i<r;i++)e=n[i],s.addColorStop(e.pos||0,e.color);return s},radial:function(t){var e,s,i,r,n;for(s=t.createRadialGradient(this.x0||0,this.y0||0,this.r0||0,this.x1||0,this.y1||0,this.r1||0),i=0,r=(n=this.colorStops).length;i<r;i++)e=n[i],s.addColorStop(e.pos||0,e.color);return s},pattern:function(t,e){var s;return s=e.data.images[this.image],t.createPattern(s,this.repetition||"repeat")}},v=function(t,e,s){var i;return null!=(i=w[s.type])?i.call(s,t,e):void 0},g=function(t,e){var s,i;return(i=this.stroke)&&(i.constructor===Object&&(this.stroke=v(t,e,i)),t.strokeStyle=this.stroke),(s=this.fill)&&(s.constructor===Object&&(this.fill=v(t,e,s)),t.fillStyle=this.fill),null!==this.lineWidth&&(t.lineWidth=this.lineWidth),null!==this.lineCap&&(t.lineCap=this.lineCap),this.lineJoin&&(t.lineJoin=this.lineJoin),null!==this.lineDashOffset&&(t.lineDashOffset=this.lineDashOffset),this},d=function(t,e,s){var i,r,n,a,h,o,l;if(t.save(),e.animation.animate(this),t.transform(this.scaleX||1,this.skewY||0,this.skewX||0,this.scaleY||1,this.origX||0,this.origY||0),(n=this.modelAngleScale)&&t.rotate(e.angle*n*Math.PI/180),this.angle&&t.rotate(this.angle*Math.PI/180),g.call(this,t,e),this.noShadow&&(t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0),null!==this.shadowBlur&&(t.shadowBlur=this.shadowBlur),null!==this.shadowColor&&(t.shadowColor=this.shadowColor),null!==this.shadowOffsetX&&(t.shadowOffsetX=this.shadowOffsetX),null!==this.shadowOffsetY&&(t.shadowOffsetY=this.shadowOffsetY),t.globalAlpha=s*(null===this.opacity?1:this.opacity),this.before){for(r in e.animation.reciveProps(this),h=this.before)(a=h[r]).hide||d.call(a,t,e,s);e.animation.animate(this)}if(t.beginPath(),null!=(o=m[this.type])&&o.call(this,t,e,s),this.noClose||t.closePath(),"f"!==(i=this.draw||"f&s")&&"f&s"!==i||t.fill(),"s"!==i&&"f&s"!==i||t.stroke(),this.clip&&t.clip(),e.animation.reciveProps(this),this.after)for(r in l=this.after)(a=l[r]).hide||d.call(a,t,e,s);return t.restore(),this},p={poly:function(t,e,s,i){var r,n,a,h,o,l,d,f,p,m;for(h=e[this.verts[0]],l=s.x,f=s.y,m=u+s.z,p=((h.z||0)+m)*c,o=((h.x||0)+l)*p,d=((h.y||0)+f)*p,t.moveTo(o,d),r=n=1,a=this.verts.length-1;1<=a?n<=a:n>=a;r=1<=a?++n:--n)p=(((h=e[this.verts[r]]).z||0)+m)*c,o=((h.x||0)+l)*p,d=((h.y||0)+f)*p,t.lineTo(o,d);return this},part:function(t,e,s,i,r){var n,a,h,o,l,u,c,d,p,m,v,g;if(this.noClose=this.draw=!0,(l=null!=(d=(m=i.data).models)?d[this.model]:void 0)?(i.data=l,c=l.dirsParts[this.direction||0]):c=i.parts,c&&(g=e[this.vert],n={x:s.x+(g.x||0),y:s.y+(g.y||0),z:s.z+(g.z||0)},u=c[this.part])){for(v=i.parts,i.parts=c,h=0,o=(p=u.faces).length;h<o;h++)a=p[h],f.call(a,t,i,n,r);i.parts=v}return i.data=m,this},node:function(t,e,s,i,r){return x(e[this.vert],s).apply(t),m.node.call(this,t,i,r),this},attach:function(t,e,s){var i;return x(verts[this.vert],camera).apply(t),(i=e.attachment[this.attach])&&m.node.call(this,t,e,s,i),this},elipse:function(t,e,s){var i,r,n,a,h;return a=(n=x(e[this.vert1],s)).x,h=n.y,i=((n=x(e[this.vert2],s)).x-a)/2,r=(n.y-h)/2,t.ellipse(a+i,h+r,i,r,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise),this}},f=function(t,e,s,i){var r,n;return t.save(),this.stroke,g.call(this,t,e),t.globalAlpha=i*(null===this.opacity?1:this.opacity),t.beginPath(),null!=(n=p[this.type||"poly"])&&n.call(this,t,e.data.verts,s,e,i),this.noClose||t.closePath(),"f"!==(r=this.draw||"f&s")&&"f&s"!==r||t.fill(),"s"!==r&&"f&s"!==r||t.stroke(),t.restore(),this},u=1/(c=2e-4),P={x:0,y:0,scale:1,apply:function(t){return t.transform(this.scale,0,0,this.scale,this.x,this.y)}},o=function(){class t{static transform(t,e,s,i){return s=(u+s+i.z)*c,P.x=(t+i.x)*s,P.y=(e+i.y)*s,P.scale=s,P}constructor(t){this.data=t,this.attachment=[],this.animation=new s}setData(t){return this.data=t,this.setAngle(this.angle)}setAngle(t){var e,s,i,r;return this.angle=t%=360,this.animation.setAngle(t),(s=this.data.dirs)?(i=s.length)>1?(e=360/i,t<0&&(t+=360),this.model=s[Math.floor(t/e)]):this.model=s[0]:this.model=null,(r=this.data.dirsParts)?(i=r.length)>1?(e=360/i,t<0&&(t+=360),this.parts=r[Math.floor(t/e)]):this.parts=r[0]:this.parts=null}draw2D(t,e=1){var s,i,r,n;if(this.model){for(s in n=[],r=this.model)(i=r[s]).hide?n.push(void 0):n.push(d.call(i,t,this,e));return n}}drawNode(t,e,s=1){if(this.model&&(e=this.model[e]))return d.call(e,t,this,s)}drawPart(t,e,s,i=1){var r,n,a,h,o;for(o=[],n=0,a=(h=e.faces).length;n<a;n++)r=h[n],o.push(f.call(r,t,this,s,i));return o}drawParts(t,e,s=1){var i,r,n,a,h;if(this.parts){for(i in h=[],a=this.parts)(n=a[i]).hide?h.push(void 0):h.push(function(){var i,a,h,o;for(o=[],i=0,a=(h=n.faces).length;i<a;i++)r=h[i],o.push(f.call(r,t,this,e,s));return o}.call(this));return h}}}return t.prototype.angle=0,t}.call(void 0),y=o.transform,x=function(t,e){return y(t.x||0,t.y||0,t.z||0,e)},b=function(t){var e,s,i,r,n;for(i in e=class extends Array{constructor(){super(0)}},s=function(t,e=[]){var i,r,n,a,h,o;for(r=0,n=(o=Object.getOwnPropertyNames(t)).length;r<n;r++)"constructor"!==(a=o[r])&&"function"==typeof(i=t[a])&&(e[a]=i);return(h=Object.getPrototypeOf(t)).constructor!==Object&&s(h,e),e},r=e.prototype,n=s(t.prototype))(function(t){return r[i]=function(){return this.forEach((function(e){return t.apply(e,arguments)}))}})(n[i]);return e}(class extends t{constructor(t){super(),this.name=t}move(t,e){return console.log(`move unit ${this.name}`)}play(t){}}),O=class{constructor(t){this.gamecore=t,this.units=new b}load(t,e){return t.loadJson(e||"arenas/arena",e=>{var s,i;if(e){for(s in e)i=e[s],this[s]=i;if(this.model)return this.modelData=l.load(t,this.model)}})}init(){return this.arena=new o,this.arena.setData(this.modelData)}predraw(){var t,e,s,i,r;return r=(t=this.gamecore.canvas).width,i=t.height,e=r/2+this.translate.x,s=i/2+this.translate.y,this.gamecore.context.translate(e,s)}set(){var t,e;if(this.remove(),this.gamecore.drawstage.add(this.arena,this.position),t=this.camera)return(e=this.gamecore.camera).x=t.x||0,e.y=t.y||0,e.z=t.z||0}remove(){return this.gamecore.drawstage.delete(this.arena)}play(t){var e;return null!=(e=this.arena)&&e.animation.play(t),this.units.play(t)}},k=-2e3,T=2e3,z=function(){class t{constructor(t,e){this.context=t,this.camera=e}add(t,e){var s,i,r,n,a,h;if(r=this.objects,e=e||{x:0,y:0,z:0},t.parts)for(s in h=t.parts)(a=h[s]).hide||((n=new I(t,a)).v=e,r.push(n));return t.data.dirs&&(t.nodeObj||((i=new A(t)).v=e,t.nodeObj=i,r.push(i))),this}delete(t){return delete t.nodeObj,this.objects=this.objects.filter((function(e){return e.model!==t})),this}draw(){var t,e,s,i;for(t=this.camera.z,this.drawList=e=this.objects.filter((function(e){var s;return(s=e.getZ()+t)>=k&&s<=T})).sort((function(t,e){return t.getZ()-e.getZ()})),s=0,i=e.length;s<i;s++)e[s].draw(this);return this}}return t.prototype.objects=[],t}.call(void 0),C={x:0,y:0,z:0},I=class{constructor(t,e){this.model=t,this.part=e}setPos(t){return this.v.x=t.x,this.v.y=t.y,this.v.z=t.z}getZ(){return this.part.z+this.v.z}draw(t){var e,s;return e=t.camera,s=t.context,C.x=this.v.x+e.x,C.y=this.v.y+e.y,C.z=this.v.z+e.z,this.scale&&s.scale(this.scale,this.scale),this.model.drawPart(s,this.part,C,this.opacity)}},A=class{constructor(t){this.model=t}setPos(t){return this.v.x=t.x,this.v.y=t.y,this.v.z=t.z}getZ(){return this.v.z}draw(t){var e,s;return e=t.camera,(s=t.context).save(),o.transform(this.v.x,this.v.y,this.v.z,e).apply(s),this.scale&&s.scale(this.scale,this.scale),this.model.drawNode(s,this.node,this.opacity),s.restore()}},M=function(){var e,s;return s=0,e=0,class extends t{reset(){return s=e=0}getPercent(){return 1-(0!==e?s/e:0)}updatePercent(){return this.trigger("changepercent",[this.getPercent()])}load(t){var i;return i=this,s++,e++,function(){return null!=t&&t.apply(i,arguments),--s<=0&&(i.reset(),i.trigger("load")),i.updatePercent()}}loadJson(t,e){return e=this.load(e),$.getJSON(t+".json").done(e).fail((function(){return e(null)}))}loadImage(t,e){var s;return e=this.load(e),(s=new Image).onload=function(){return e(s)},s.src=t,s}}}.call(void 0),S=class extends t{constructor(t,e){var s;super(),this.canvas=t,this.context=e,this.loader=new M,this.camera=s={x:0,y:0,z:0},this.drawstage=new z(this.context,s),this.arena=new O(this),this.pauseTime=0,this.pause=!1}load(){return this.arena.load(this.loader),this.loader.on("load",()=>(this.arena.init(),this.arena.set(),this.trigger("load"))),this}render(){var t;return(t=e=>{var i,r;return this.context.save(),r=this.canvas.width,i=this.canvas.height,this.context.fillStyle="#fff",this.context.fillRect(0,0,r,i),this.pause||(this.time=s.getTime()-this.pauseTime),this.arena.play(this.time),this.arena.predraw(),this.drawstage.draw(),this.context.restore(),window.requestAnimationFrame(t)})(0),this}pause(){return this.pause=!0}unpause(){return this.pause=!1,this.pauseTime+=s.getTime()-this.time}},$(document).ready((function(){var t,e,s,i,r,n,a,h,o,l,u;return t=$("#canvas"),e=$(".gamescreen"),r=(i=t.get(0)).getContext("2d",{alpha:!1}),(u=function(){return i.width=$(window).width(),i.height=$(window).height()})(),$(window).on("resize",u),(n=new S(i,r)).on("load",(function(){return n.render()})),n.load(),s=n.camera,o=l=0,h=function(t){return s.x+=t.clientX-o,s.y+=t.clientY-l,o=t.clientX,l=t.clientY},e.on("mousedown",(function(t){return o=t.clientX,l=t.clientY,e.on("mousemove",h)})),e.on("touchstart",(function(t){return o=t.touches[0].clientX,l=t.touches[0].clientY})),e.on("touchmove",(function(t){return h(t.touches[0])})),e.on("mouseup",(function(){return e.off("mousemove",h)})),$(".js-stop-propagation").on("mousedown mouseup mousemove touchstart touchmove",(function(t){return t.stopPropagation()})),a=function(t){return t.requestFullScreen?t.requestFullScreen():t.mozRequestFullScreen?t.mozRequestFullScreen():t.webkitRequestFullScreen?t.webkitRequestFullScreen():void 0},$(".btn-fullscreen").click((function(){return a(document.documentElement)}))}))}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
