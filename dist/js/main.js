"use strict";!function(){var t,e,i,s,r,a,n,h,o,l,c,u,d,f,p,m,v,g,w,y,x,P,z,b,k,O,T,A,I,C,M;t=class{constructor(){this.handlers=[]}on(t,e){var i;return e&&((i=this.handlers[t])||(this.handlers[t]=i=[]),i.indexOf(e)<0&&i.push(e)),this}off(t,e){var i,s;return e&&(i=this.handlers[t])&&(s=i.indexOf(e))>=0&&i.splice(s,1),this}trigger(t,e){var i,s,r;if(i=this.handlers[t])for(s=0,r=i.length;s<r;s++)i[s].apply(this,e);return this}removeEvent(t){return delete this.handlers[t],this}},e=function(){class t{static load(e,i){var s;return(s=t.cache[i])||((s=new t).load(e,i),t.cache[i]=s),s}load(t,e){return t.loadJson(e,t=>{this.data=t}),t.loadImage(e+".png",t=>{this.texture=t})}draw(t,e,i,s,r=0){var a;if(a=this.data)switch(e.constructor){case Object:t.drawImage(this.texture,e.x,e.y,e.w,e.h,i+e.cx,s+e.cy,e.w,e.h);break;case Array:this.draw(t,e[Math.floor(r)%e.lenght],i,s);break;case String:this.draw(t,a[e],i,s,r)}return this}}return t.cache=[],t}.call(void 0),function(){class t{static load(e,i){var s;return(s=t.cache[i])||((s=new t).load(e,i),t.cache[i]=s),s}load(t,e){return t.loadJson(e,t=>{var e,i,s;if(t){for(e in i=[],t)s=t[e],i.push(this[e]=s);return i}})}}return t.cache=[],t}.call(void 0),s=function(){return(new Date).getTime()/1e3},a=function(t){return function(e){return 1-t(1-e)}},r=function(t){return function(e){return e<.5?t(2*e)/2:(2-t(2*(1-e)))/2}},n=function(t,e){return h[t]=e,h[t+"EaseOut"]=a(e),h[t+"EaseInOut"]=r(e)},h={linear:function(t){return t},easeOut:function(t){return 1-t},easeInOut:function(t){return t<.5?2*t:2-2*t}},n("quad",(function(t){return t*t})),n("circle",(function(t){return 1-Math.sin(Math.acos(t))})),n("bounce",(function(t){var e,i;for(e=0,i=1;;){if(t>=(7-4*e)/11)return-Math.pow((11-6*e-11*t)/4,2)+Math.pow(i,2);e+=i,i/=2}})),i=function(){class t{reset(){return this.startTime=s(),this.deltaTime=0,this}setAnim(t,e=0,i=this.data){return this.anim=null!=i?i[t]:void 0,this.reset(),this.anim&&(this.duration=this.anim?this.anim.duration:0,this.setAngle(e)),this}setAngle(t){var e,i,s;return this.frame=null,this.anim&&(t%=360,(i=this.anim.dirs)&&((s=i.lenght)>1?(e=360/s,t<0&&(t+=360),this.frame=i[Math.floor(t/e)]):this.frame=i[0])),this}play(t){var e,i;if(t=t||s(),this.deltaTime=e=(t-this.startTime)*this.scale,!(i=this.duration))return!1;if(e>i){if(!this.loop)return!1;this.deltaTime%=i}return!0}animate(e,i=e.nodePath,s=e.nodeName){var r,a,n,o,l,c,u,d,f,p,m,v,g,w,y;if((a=this.frame)&&(w=a[i]||a[s]))for(r=this.deltaTime,d=t.props,f=t.propsUsed,n=0,o=w.length;n<o;n++)if(r>=(c=w[n]).end)for(l in p=c.to)y=p[l],f[l]||(d[l]=e[l],f[l]=!0),e[l]=y;else if(r>=c.start)for(l in v=c.func?h[c.func]:h.linear,m=c.to)y=m[l],u=e[l],f[l]||(d[l]=u,f[l]=!0),u||(u=0),y.constructor===Number?(g=v((r-c.start)/(c.end-c.start)),e[l]=(y-u)*g+u):e[l]=y;return this}reciveProps(e){var i,s,r;for(i in s=t.props,r=t.propsUsed)r[i]&&(e[i]=s[i],delete r[i]);return this}createWorkFrame(){return this.loop=!1,this.frame={work:[{start:0,end:0,to:{}}]},this}resetWork(){var e,i;for(e in i=t.propsUsed)i[e]&&(i[e]=!1);return this}clearWork(){var t,e,i;return(t=this.frame.work[0]).start=t.end=0,i=function(){var t;for(e in t=[],i)i[e],t.push(delete i[e]);return t}(),this}animateProps(t,e,i){var s,r,a,n;for(r in this.duration=e,(s=this.frame.work[0]).end=e,s.func=i,n=s.to,t)a=t[r],n[r]=a;return this.reset(),this}}return t.getTime=s,t.prototype.loop=!0,t.prototype.startTime=0,t.prototype.duration=0,t.prototype.deltaTime=0,t.prototype.scale=1,t.props=[],t.propsUsed=[],t}.call(void 0),l=function(){class t{static load(e,i){var s;return(s=t.cache[i])||((s=new t).load(e,i),t.cache[i]=s),s}load(i,s){return i.loadJson(s,s=>{var r,a,n,h,o,l,c,u,d,f,p,m,v,g;if(s){for(h in s)g=s[h],this[h]=g;if(this.images)for(h in a=this.images,this.images=[],a)r=a[h],this.images[h]=i.loadImage(r);if(this.sprites)for(h in v=this.sprites,this.sprites=[],v)m=v[h],this.sprites[h]=e.load(i,m);if(this.models)for(h in c=this.models,this.models=[],c)l=c[h],this.models[h]=t.load(i,l);if(d=function(t,e=""){var i,s,r;for(i in r=[],t)(s=t[i]).nodePath=e+i,s.nodeName="@"+i,s.before&&d(s.before,s.nodePath+"<"),s.after?r.push(d(s.after,s.nodePath+">")):r.push(void 0);return r},this.dirs){for(p=[],n=0,o=(f=this.dirs).length;n<o;n++)u=f[n],p.push(d(u));return p}}})}}return t.cache=[],t}.call(void 0),m={line:function(t){return t.moveTo(this.x1||0,this.y1||0),t.lineTo(this.x2||0,this.y2||0),this},rect:function(t){return t.rect(this.x||0,this.y||0,this.width||1,this.height||1),this},rectRound:function(t){var e,i,s,r,a;return this.noClose=!1,r=this.x||0,a=this.y||0,s=this.width,e=this.height,s<2*(i=this.radius)&&(i=s/2),e<2*i&&(i=e/2),t.moveTo(r+i,a),t.arcTo(r+s,a,r+s,a+e,i),t.arcTo(r+s,a+e,r,a+e,i),t.arcTo(r,a+e,r,a,i),t.arcTo(r,a,r+s,a,i),this},arc:function(t){return t.arc(this.x||0,this.y||0,this.radius,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise),this},elipse:function(t){return t.ellipse(this.x||0,this.y||0,this.rx,this.ry,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise),this},path:function(t){var e,i,s;return i=this.x||0,s=this.y||0,"string"==typeof this.path&&(this.path=new Path2D(this.path)),this.noClose=!0,t.translate(i,s),"f"!==(e=this.draw||"f&s")&&"f&s"!==e||t.fill(this.path),"s"!==e&&"f&s"!==e||t.stroke(this.path),this},node:function(t,e,i,s){var r,a,n,h,o,l,c,u,f;if(this.noClose=this.draw=!0,u=e.data,f=e.model,(n=s||(null!=(l=u.models)?l[this.model]:void 0))?(e.data=n,e.model=o=n.dirs[this.direction||0]):o="number"==typeof this.direction?e.data.dirs[this.direction]:e.model,o){if("string"==typeof(h=this.node))h=o[h];else{for(c=o,r=0,a=h.length;r<a;r++)c=c[h[r]];h=c}h&&(t.translate(this.x||0,this.y||0),d.call(h,t,e,i))}return e.model=f,e.data=u,this},attach:function(t,e,i){var s;return(s=e.attachment[this.attach])&&m.node.call(this,t,e,i,s),this},image:function(t,e){var i;return this.noClose=this.draw=!0,i=e.data.images[this.image],this.width||this.height?t.drawImage(i,this.x||0,this.y||0,this.width,this.height):t.drawImage(i,this.x||0,this.y||0),this},sprite:function(t,e){var i;return this.noClose=this.draw=!0,(i=this.sprite).constructor===String&&(this.sprite=i=e.data.sprites[i]),i.draw(t,this.frame,this.x||0,this.y||0,this.index),this},text:function(t){var e;return!0!==this.draw&&(this.drawText=this.draw),e=this.drawText,this.noClose=this.draw=!0,this.font&&(t.font=this.font),this.textAlign&&(t.textAlign=this.textAlign),null!==this.textBaseline&&(t.textBaseline=this.textBaseline),this.direction&&(t.direction=this.direction),"f"!==e&&"f&s"!==e||t.fillText(this.text,this.x||0,this.y||0,this.maxWidth),"s"!==e&&"f&s"!==e||t.strokeText(this.text,this.x||0,this.y||0,this.maxWidth),this}},w={linear:function(t){var e,i,s,r,a;for(i=t.createLinearGradient(this.x0||0,this.y0||0,this.x1||0,this.y1||0),s=0,r=(a=this.colorStops).length;s<r;s++)e=a[s],i.addColorStop(e.pos||0,e.color);return i},radial:function(t){var e,i,s,r,a;for(i=t.createRadialGradient(this.x0||0,this.y0||0,this.r0||0,this.x1||0,this.y1||0,this.r1||0),s=0,r=(a=this.colorStops).length;s<r;s++)e=a[s],i.addColorStop(e.pos||0,e.color);return i},pattern:function(t,e){var i;return i=e.data.images[this.image],t.createPattern(i,this.repetition||"repeat")}},v=function(t,e,i){var s;return null!=(s=w[i.type])?s.call(i,t,e):void 0},g=function(t,e){var i,s;return(s=this.stroke)&&(s.constructor===Object&&(this.stroke=v(t,e,s)),t.strokeStyle=this.stroke),(i=this.fill)&&(i.constructor===Object&&(this.fill=v(t,e,i)),t.fillStyle=this.fill),null!==this.lineWidth&&(t.lineWidth=this.lineWidth),null!==this.lineCap&&(t.lineCap=this.lineCap),this.lineJoin&&(t.lineJoin=this.lineJoin),null!==this.lineDashOffset&&(t.lineDashOffset=this.lineDashOffset),this},d=function(t,e,i){var s,r,a,n,h,o,l;if(t.save(),e.animation.animate(this),t.transform(this.scaleX||1,this.skewY||0,this.skewX||0,this.scaleY||1,this.origX||0,this.origY||0),(a=this.modelAngleScale)&&t.rotate(e.angle*a*Math.PI/180),this.angle&&t.rotate(this.angle*Math.PI/180),g.call(this,t,e),this.noShadow&&(t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0),null!==this.shadowBlur&&(t.shadowBlur=this.shadowBlur),null!==this.shadowColor&&(t.shadowColor=this.shadowColor),null!==this.shadowOffsetX&&(t.shadowOffsetX=this.shadowOffsetX),null!==this.shadowOffsetY&&(t.shadowOffsetY=this.shadowOffsetY),t.globalAlpha=i*(null===this.opacity?1:this.opacity),this.before){for(r in e.animation.reciveProps(this),h=this.before)(n=h[r]).hide||d.call(n,t,e,i);e.animation.animate(this)}if(t.beginPath(),null!=(o=m[this.type])&&o.call(this,t,e,i),this.noClose||t.closePath(),"f"!==(s=this.draw||"f&s")&&"f&s"!==s||t.fill(),"s"!==s&&"f&s"!==s||t.stroke(),this.clip&&t.clip(),e.animation.reciveProps(this),this.after)for(r in l=this.after)(n=l[r]).hide||d.call(n,t,e,i);return t.restore(),this},p={poly:function(t,e,i,s){var r,a,n,h,o,l,d,f,p,m;for(h=e[this.verts[0]],l=i.x,f=i.y,m=c+i.z,p=((h.z||0)+m)*u,o=((h.x||0)+l)*p,d=((h.y||0)+f)*p,t.moveTo(o,d),r=a=1,n=this.verts.length-1;1<=n?a<=n:a>=n;r=1<=n?++a:--a)p=(((h=e[this.verts[r]]).z||0)+m)*u,o=((h.x||0)+l)*p,d=((h.y||0)+f)*p,t.lineTo(o,d);return this},part:function(t,e,i,s,r){var a,n,h,o,l,c,u,d,p,m,v,g;if(this.noClose=this.draw=!0,(l=null!=(d=(m=s.data).models)?d[this.model]:void 0)?(s.data=l,u=l.dirsParts[this.direction||0]):u=s.parts,u&&(g=e[this.vert],a={x:i.x+(g.x||0),y:i.y+(g.y||0),z:i.z+(g.z||0)},c=u[this.part])){for(v=s.parts,s.parts=u,h=0,o=(p=c.faces).length;h<o;h++)n=p[h],f.call(n,t,s,a,r);s.parts=v}return s.data=m,this},node:function(t,e,i,s,r){return x(e[this.vert],i).apply(t),m.node.call(this,t,s,r),this},attach:function(t,e,i){var s;return x(verts[this.vert],camera).apply(t),(s=e.attachment[this.attach])&&m.node.call(this,t,e,i,s),this},elipse:function(t,e,i){var s,r,a,n,h;return n=(a=x(e[this.vert1],i)).x,h=a.y,s=((a=x(e[this.vert2],i)).x-n)/2,r=(a.y-h)/2,t.ellipse(n+s,h+r,s,r,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise),this}},f=function(t,e,i,s){var r,a;return t.save(),this.stroke,g.call(this,t,e),t.globalAlpha=s*(null===this.opacity?1:this.opacity),t.beginPath(),null!=(a=p[this.type||"poly"])&&a.call(this,t,e.data.verts,i,e,s),this.noClose||t.closePath(),"f"!==(r=this.draw||"f&s")&&"f&s"!==r||t.fill(),"s"!==r&&"f&s"!==r||t.stroke(),t.restore(),this},c=1/(u=2e-4),P={x:0,y:0,scale:1,apply:function(t){return t.transform(this.scale,0,0,this.scale,this.x,this.y)}},o=function(){class t{static transform(t,e,i,s){return i=(c+i+s.z)*u,P.x=(t+s.x)*i,P.y=(e+s.y)*i,P.scale=i,P}constructor(t){this.data=t}setData(t){return this.data=t,this.setAngle(this.angle)}setAngle(t){var e,i,s,r;return this.angle=t%=360,this.animation.setAngle(t),(i=this.data.dirs)?(s=i.length)>1?(e=360/s,t<0&&(t+=360),this.model=i[Math.floor(t/e)]):this.model=i[0]:this.model=null,(r=this.data.dirsParts)?(s=r.length)>1?(e=360/s,t<0&&(t+=360),this.parts=r[Math.floor(t/e)]):this.parts=r[0]:this.parts=null}draw2D(t,e=1){var i,s,r,a;if(this.model){for(i in a=[],r=this.model)(s=r[i]).hide?a.push(void 0):a.push(d.call(s,t,this,e));return a}}drawNode(t,e,i=1){if(this.model&&(e=this.model[e]))return d.call(e,t,this,i)}drawPart(t,e,i,s=1){var r,a,n,h,o;for(o=[],a=0,n=(h=e.faces).length;a<n;a++)r=h[a],o.push(f.call(r,t,this,i,s));return o}drawParts(t,e,i=1){var s,r,a,n,h;if(this.parts){for(s in h=[],n=this.parts)(a=n[s]).hide?h.push(void 0):h.push(function(){var s,n,h,o;for(o=[],s=0,n=(h=a.faces).length;s<n;s++)r=h[s],o.push(f.call(r,t,this,e,i));return o}.call(this));return h}}}return t.prototype.attachment=[],t.prototype.animation=new i,t.prototype.angle=0,t}.call(void 0),y=o.transform,x=function(t,e){return y(t.x||0,t.y||0,t.z||0,e)},z=class{load(t,e){return t.loadJson(e||"arenas/arena",e=>{var i,s;if(e){for(i in e)s=e[i],this[i]=s;if(this.model)return this.modelData=l.load(t,this.model)}})}init(){return this.arena=new o,this.arena.setData(this.modelData)}predraw(t){var e,i,s,r,a;return a=(e=t.canvas).width,r=e.height,i=a/2+this.translate.x,s=r/2+this.translate.y,t.context.translate(i,s)}set(t){var e,i;if(t.drawstage.add(this.arena,this.position),e=this.camera)return(i=t.camera).x=e.x||0,i.y=e.y||0,i.z=e.z||0}remove(t){return t.drawstage.delete(this.arena)}play(t){var e;return null!=(e=this.arena)?e.animation.play(t):void 0}},O=-2e3,k=2e3,b=function(){class t{constructor(t,e){this.context=t,this.camera=e}add(t,e){var i,s,r,a,n,h;if(r=this.objects,e=e||{x:0,y:0,z:0},t.parts)for(i in h=t.parts)(n=h[i]).hide||((a=new A(t,n)).v=e,r.push(a));return t.data.dirs&&(t.nodeObj||((s=new T(t)).v=e,t.nodeObj=s,r.push(s))),this}delete(t){return delete t.nodeObj,this.objects=this.objects.filter((function(e){return e.model!==t})),this}draw(){var t,e,i,s;for(t=this.camera.z,this.drawList=e=this.objects.filter((function(e){var i;return(i=e.getZ()+t)>=O&&i<=k})).sort((function(t,e){return t.getZ()-e.getZ()})),i=0,s=e.length;i<s;i++)e[i].draw(this);return this}}return t.prototype.objects=[],t}.call(void 0),I={x:0,y:0,z:0},A=class{constructor(t,e){this.model=t,this.part=e}setPos(t){return this.v.x=t.x,this.v.y=t.y,this.v.z=t.z}getZ(){return this.part.z+this.v.z}draw(t){var e,i;return e=t.camera,i=t.context,I.x=this.v.x+e.x,I.y=this.v.y+e.y,I.z=this.v.z+e.z,this.scale&&i.scale(this.scale,this.scale),this.model.drawPart(i,this.part,I,this.opacity)}},T=class{constructor(t){this.model=t}setPos(t){return this.v.x=t.x,this.v.y=t.y,this.v.z=t.z}getZ(){return this.v.z}draw(t){var e,i;return e=t.camera,(i=t.context).save(),o.transform(this.v.x,this.v.y,this.v.z,e).apply(i),this.scale&&i.scale(this.scale,this.scale),this.model.drawNode(i,this.node,this.opacity),i.restore()}},C=function(){var e,i;return i=0,e=0,class extends t{reset(){return i=e=0}getPercent(){return 1-(0!==e?i/e:0)}updatePercent(){return this.trigger("changepercent",[this.getPercent()])}load(t){var s;return s=this,i++,e++,function(){return null!=t&&t.apply(s,arguments),--i<=0&&(s.reset(),s.trigger("load")),s.updatePercent()}}loadJson(t,e){return e=this.load(e),$.getJSON(t+".json").done(e).fail((function(){return e(null)}))}loadImage(t,e){var i;return e=this.load(e),(i=new Image).onload=function(){return e(i)},i.src=t,i}}}.call(void 0),M=class extends t{constructor(t,e){var i;super(),this.canvas=t,this.context=e,this.loader=new C,this.camera=i={x:0,y:0,z:0},this.drawstage=new b(this.context,i),this.arena=new z}load(){return this.arena.load(this.loader),this.loader.on("load",()=>(this.arena.init(),this.arena.set(this),this.trigger("load"))),this}render(){var t;return(t=e=>{var i,s,r;return this.context.save(),r=this.canvas.width,i=this.canvas.height,this.context.fillStyle="#fff",this.context.fillRect(0,0,r,i),s=(new Date).getTime()/1e3,this.arena.play(s),this.arena.predraw(this),this.drawstage.draw(),this.context.restore(),window.requestAnimationFrame(t)})(0),this}},$(document).ready((function(){var t,e,i,s,r,a,n,h,o,l,c;return t=$("#canvas"),e=$(".gamescreen"),r=(s=t.get(0)).getContext("2d",{alpha:!1}),(c=function(){return s.width=$(window).width(),s.height=$(window).height()})(),$(window).on("resize",c),(a=new M(s,r)).on("load",(function(){return console.log("load"),a.render()})),a.load(),i=a.camera,o=l=0,h=function(t){return i.x+=t.clientX-o,i.y+=t.clientY-l,o=t.clientX,l=t.clientY},e.on("mousedown",(function(t){return o=t.clientX,l=t.clientY,e.on("mousemove",h)})),e.on("touchstart",(function(t){return o=t.touches[0].clientX,l=t.touches[0].clientY})),e.on("touchmove",(function(t){return h(t.touches[0])})),e.on("mouseup",(function(){return e.off("mousemove",h)})),$(".js-stop-propagation").on("mousedown mouseup mousemove touchstart touchmove",(function(t){return t.stopPropagation()})),n=function(t){return t.requestFullScreen?t.requestFullScreen():t.mozRequestFullScreen?t.mozRequestFullScreen():t.webkitRequestFullScreen?t.webkitRequestFullScreen():void 0},$(".btn-fullscreen").click((function(){return n(document.documentElement)}))}))}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
